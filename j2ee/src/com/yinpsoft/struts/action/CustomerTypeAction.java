/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.yinpsoft.struts.action;

import java.util.Date;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;

import com.yinpsoft.BaseDAO;
import com.yinpsoft.beans.Customertype;
import com.yinpsoft.daos.CustomerTypeDAO;
import com.yinpsoft.struts.form.CustomerTypeForm;

/** 
 * MyEclipse Struts
 * Creation date: 01-12-2009
 * 
 * XDoclet definition:
 * @struts.action path="/customerType" name="customerTypeForm" input="/customerTypeEdit.jsp" parameter="action" scope="request" validate="true"
 */
public class CustomerTypeAction extends DispatchAction {
	/*
	 * Generated Methods
	 */
	private static Log logger = (Log) LogFactory.getLog(CustomerTypeAction.class);
		
	public ActionForward save(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response){
		logger.debug(this.clazz.getName()+".save Begin...............................................");
		CustomerTypeDAO customerTypeDao = new CustomerTypeDAO();
		Customertype customerType = new Customertype();
		CustomerTypeForm customerTypeForm = (CustomerTypeForm)form;
		
		customerType.setCustomertypecode(customerTypeForm.getCustomerTypeCode());
		customerType.setCustomertypename(customerTypeForm.getCustomerTypeName());
		customerType.setCreated(new Date());		
		
		//customerType.getCustomertypeid()
		
		try {
			customerTypeDao.save(customerType);
			BaseDAO.Commit();
		} catch (Exception e) {
			BaseDAO.Rollback();
		}
		
		logger.debug("Action Forward Target: "+"/customerType.do?action=view&customerTypeId="+customerType.getCustomertypeid());
		logger.debug(this.clazz.getName()+".save End...............................................");
		
		return new ActionForward("/customerType.do?action=view&customerTypeId="+customerType.getCustomertypeid());
	}
	
	public ActionForward update(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response){
		logger.debug(this.clazz.getName()+".save Begin...............................................");
		String id = request.getParameter("customerTypeId");
		CustomerTypeDAO customerTypeDao = new CustomerTypeDAO();
		Customertype customerType = customerTypeDao.findById(id);
		CustomerTypeForm customerTypeForm = (CustomerTypeForm)form;
		
		customerType.setCustomertypecode(customerTypeForm.getCustomerTypeCode());
		customerType.setCustomertypename(customerTypeForm.getCustomerTypeName());
		customerType.setCreated(new Date());
				
		try {
			customerTypeDao.attachDirty(customerType);
			BaseDAO.Commit();
		} catch (Exception e) {
			BaseDAO.Rollback();
		}
		
		logger.debug("Action Forward Target: "+"/customerType.do?action=view&customerTypeId="+customerType.getCustomertypeid());
		logger.debug(this.clazz.getName()+".save End...............................................");
		
		return new ActionForward("/customerType.do?action=view&customerTypeId="+customerType.getCustomertypeid());
	}
	
	public ActionForward edit(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response){
		
		logger.debug(this.clazz.getName()+".edit Begin...............................................");
		
		String id = request.getParameter("customerTypeId");
		CustomerTypeForm customerTypeForm = (CustomerTypeForm)form;
		CustomerTypeDAO customerTypeDao = new CustomerTypeDAO();
		
		try{
			Customertype customerType = customerTypeDao.findById(id);
			customerTypeForm.setCustomerTypeCode(customerType.getCustomertypecode());
			customerTypeForm.setCustomerTypeName(customerType.getCustomertypename());
			
			BaseDAO.Commit();
		} catch (Exception e){
			BaseDAO.Rollback();
		}
		
		logger.debug(this.clazz.getName()+".edit End...............................................");
		
		return mapping.findForward("customerTypeEdit");
	}
	
	public ActionForward init(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response){
		
		logger.debug(this.clazz.getName()+".init Begin...............................................");
		
		CustomerTypeForm customerTypeForm = (CustomerTypeForm)form;
		customerTypeForm.setCustomerTypeCode("");
		customerTypeForm.setCustomerTypeName("");
		
		logger.debug(this.clazz.getName()+".init Begin...............................................");
		
		return mapping.findForward("customerTypeNew");
	}
	
	/**
	 * 不带分页的列表方法
	 * */
	public ActionForward list(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response){
		CustomerTypeForm customerTypeListForm = (CustomerTypeForm) form;
		CustomerTypeDAO CustomerTypeDao = new CustomerTypeDAO();

		try {
			List<Customertype> customerTypes = (List<Customertype>)CustomerTypeDao.findAll();
			//int pageSize = CustomerTypeDao.getRecordCount();
			//int currPage =customerTypeListForm.getCurrentPage();
			
//			double typeCount = new Double(pageSize);
//			double pageCount = new Double(CustomerTypeForm.PAGE_SIZE);
//			double result = Math.ceil(typeCount/pageCount);
//			log.debug("/////////////////Pages="+result);
//			customerTypeListForm.setTotalPages((int)result);
			
//			if (currPage < 1){
//				currPage = 1;
//			} else if (currPage > customerTypeListForm.getTotalPages()){
//				currPage = customerTypeListForm.getTotalPages();
//			}
			
//			int pageBegin = (currPage-1)*CustomerTypeForm.PAGE_SIZE;
//			int pageEnd = currPage*CustomerTypeForm.PAGE_SIZE+1;
//			
//			if (pageEnd >= pageSize){
//				pageEnd = pageSize;
//			}
			
			//customerTypeListForm.setCurrentPage(currPage);
			
//			log.debug("///////////////////pageBegin="+pageBegin);
//			log.debug("///////////////////pageEnd="+pageEnd);
			
			//customerTypeListForm.setCustomerTypes(customerTypes.subList(pageBegin, pageEnd));
			customerTypeListForm.setCustomerTypes(customerTypes);
			
			BaseDAO.Commit();
		} catch (Exception e){
			logger.debug("[Yin.P DEBUG]-"+e.getMessage());
			BaseDAO.Rollback();
		}
		
		return mapping.findForward("customerTypeList");
	}
	
	public ActionForward deleteBatch(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response){
		CustomerTypeForm customerTypeListForm = (CustomerTypeForm) form;
		CustomerTypeDAO customerTypeDao = new CustomerTypeDAO();
		
		try {
			for(int i = 0;i<customerTypeListForm.getCustomerTypeIds().length;i++){
				customerTypeDao.delete(
						customerTypeDao.findById(customerTypeListForm.getCustomerTypeIds()[i]));
				logger.debug("[Yin.P DEBUG]-Customer Type(Id):"+customerTypeListForm.getCustomerTypeIds()[i]+"was deleted...");
			}
			BaseDAO.Commit();
		} catch (Exception e) {
			logger.debug("[Yin.P DEBUG]-"+e.getMessage());
			BaseDAO.Rollback();
		}
				
		return new ActionForward("/customerType.do?action=pager");
	}
	
	/**
	 * 带分页的列表方法
	 * */	
	public ActionForward pager(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response){
		
		CustomerTypeForm customerTypeListForm = (CustomerTypeForm) form;
		CustomerTypeDAO CustomerTypeDao = new CustomerTypeDAO();

		try {
			//List<Customertype> customerTypes = (List<Customertype>)CustomerTypeDao.findAll();
			int pageSize = CustomerTypeDao.getRecordCount();
			
			int currPage;
			if (request.getParameter("page") == null){
				currPage = customerTypeListForm.getCurrentPage();
			} else {
				currPage = new Integer(request.getParameter("page"));
			}
			
			double typeCount = new Double(pageSize);
			double pageCount = new Double(CustomerTypeForm.PAGE_SIZE);
			double result = Math.ceil(typeCount/pageCount);
			log.debug("/////////////////Pages="+result);
			customerTypeListForm.setTotalPages((int)result);
			
			if (currPage < 1){
				currPage = 1;
			} else if (currPage > customerTypeListForm.getTotalPages()){
				currPage = customerTypeListForm.getTotalPages();
			}
			
			int pageBegin = (currPage-1)*CustomerTypeForm.PAGE_SIZE;
			int pageEnd = currPage*CustomerTypeForm.PAGE_SIZE;
			
			if (pageEnd >= pageSize){
				pageEnd = pageSize;
			}
			
			customerTypeListForm.setCurrentPage(currPage);
			
			log.debug("///////////////////pageBegin="+pageBegin);
			log.debug("///////////////////pageEnd="+pageEnd);
			
			//customerTypeListForm.setCustomerTypes(customerTypes.subList(pageBegin, pageEnd));
			customerTypeListForm.setCustomerTypes(CustomerTypeDao.findByPage(pageBegin, pageEnd));
			
			BaseDAO.Commit();
		} catch (Exception e){
			logger.debug("[Yin.P DEBUG]-"+e.getMessage());
			BaseDAO.Rollback();
		}
		
		return mapping.findForward("customerTypeList");
	}

	public ActionForward delete(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		logger.debug(this.clazz.getName()+".delete Begin...............................................");
		
		String id = request.getParameter("customerTypeId");
		CustomerTypeDAO customerTypeDao = new CustomerTypeDAO();
		try {
			customerTypeDao.delete(customerTypeDao.findById(id));
			BaseDAO.Commit();
		} catch (Exception e) {
			BaseDAO.Rollback();
		}
		
		logger.debug(this.clazz.getName()+".delete End...............................................");
		
		return new ActionForward("/customerType.do?action=pager");
	}
	
	public ActionForward view(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response){
		
		logger.debug(this.clazz.getName()+".view Begin...............................................");
		
		String id = request.getParameter("customerTypeId");
		CustomerTypeDAO customerTypeDao = new CustomerTypeDAO();
		CustomerTypeForm customerTypeForm = (CustomerTypeForm)form;
		
		try {
			Customertype customerType = customerTypeDao.findById(id);			
			customerTypeForm.setCustomerTypeName(customerType.getCustomertypename());
			customerTypeForm.setCustomerTypeCode(customerType.getCustomertypecode());
			
			BaseDAO.Commit();
		} catch (Exception e){
			BaseDAO.Rollback();
		}
		
		logger.debug(this.clazz.getName()+".view End...............................................");
		
		return mapping.findForward("customerTypeView");
	}
	
}