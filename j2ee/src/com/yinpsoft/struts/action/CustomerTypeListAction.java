/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.yinpsoft.struts.action;

import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.action.ActionRedirect;
import org.apache.struts.actions.DispatchAction;

import com.yinpsoft.BaseDAO;
import com.yinpsoft.beans.Customertype;
import com.yinpsoft.daos.CustomerTypeDAO;
import com.yinpsoft.filters.SetCharacterEncodingFilter;
import com.yinpsoft.struts.form.CustomerTypeForm;
import com.yinpsoft.struts.form.CustomerTypeListForm;

/** 
 * MyEclipse Struts
 * Creation date: 01-13-2009
 * 
 * XDoclet definition:
 * @struts.action path="/customerTypeList" name="customerTypeListForm" input="/views/customers/customerTypeList.jsp" parameter="action" scope="request" validate="true"
 */
public class CustomerTypeListAction extends DispatchAction {
	/*
	 * Generated Methods
	 */
	
	private static Log logger = (Log) LogFactory.getLog(CustomerTypeListAction.class);
	
	
	
	public ActionForward list(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response){
		CustomerTypeForm customerTypeListForm = (CustomerTypeForm) form;
		CustomerTypeDAO CustomerTypeDao = new CustomerTypeDAO();

		try {
			List<Customertype> customerTypes = (List<Customertype>)CustomerTypeDao.findAll();
			
			int currPage = customerTypeListForm.getCurrentPage();
			
			double typeCount = new Double(customerTypes.size());
			double pageCount = new Double(CustomerTypeForm.PAGE_SIZE);
			double result = Math.ceil(typeCount/pageCount);
			log.debug("/////////////////Pages="+result);
			customerTypeListForm.setTotalPages((int)result);
			
			if (currPage < 1){
				currPage = 1;
			} else if (currPage > customerTypeListForm.getTotalPages()){
				currPage = customerTypeListForm.getTotalPages();
			}
			
			int pageBegin = (currPage-1)*CustomerTypeForm.PAGE_SIZE;
			int pageEnd = currPage*CustomerTypeForm.PAGE_SIZE;
			
			if (pageEnd >= customerTypes.size()){
				pageEnd = customerTypes.size();
			}
			
			log.debug("///////////////////pageBegin="+pageBegin);
			log.debug("///////////////////pageEnd="+pageEnd);
			
			customerTypeListForm.setCustomerTypes(customerTypes.subList(pageBegin, pageEnd));
			
			BaseDAO.Commit();
		} catch (Exception e){
			logger.debug("[Yin.P DEBUG]-"+e.getMessage());
			BaseDAO.Rollback();
		}
		
		return mapping.findForward("customerTypeList");
	}
	
	public ActionForward deleteBatch(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response){
		CustomerTypeForm customerTypeListForm = (CustomerTypeForm) form;
		CustomerTypeDAO customerTypeDao = new CustomerTypeDAO();
		
		try {
			for(int i = 0;i<customerTypeListForm.getCustomerTypeIds().length;i++){
				customerTypeDao.delete(
						customerTypeDao.findById(customerTypeListForm.getCustomerTypeIds()[i]));
				logger.debug("[Yin.P DEBUG]-Customer Type(Id):"+customerTypeListForm.getCustomerTypeIds()[i]+"was deleted...");
			}
			BaseDAO.Commit();
		} catch (Exception e) {
			logger.debug("[Yin.P DEBUG]-"+e.getMessage());
			BaseDAO.Rollback();
		}
				
		return new ActionForward("/customerTypeList.do?action=list");
	}
	
	public ActionForward pager(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response){
		
		CustomerTypeListForm customerTypeListForm = (CustomerTypeListForm) form;
		CustomerTypeDAO CustomerTypeDao = new CustomerTypeDAO();

		try {
			List<Customertype> customerTypes = (List<Customertype>)CustomerTypeDao.findAll();
			
			int currPage = new Integer(request.getParameter("page"));
			
			double typeCount = new Double(customerTypes.size());
			double pageCount = new Double(CustomerTypeForm.PAGE_SIZE);
			double result = Math.ceil(typeCount/pageCount);
			log.debug("/////////////////Pages="+result);
			customerTypeListForm.setTotalPages((int)result);
			
			if (currPage < 1){
				currPage = 1;
			} else if (currPage > customerTypeListForm.getTotalPages()){
				currPage = customerTypeListForm.getTotalPages();
			}
						
			int pageBegin = (currPage-1)*CustomerTypeForm.PAGE_SIZE;
			int pageEnd = currPage*CustomerTypeForm.PAGE_SIZE;
			
			if (pageEnd >= customerTypes.size()){
				pageEnd = customerTypes.size();
			}
			
			customerTypeListForm.setCurrentPage(currPage);
			
			log.debug("///////////////////pageBegin="+pageBegin);
			log.debug("///////////////////pageEnd="+pageEnd);
			
			customerTypeListForm.setCustomerTypes(customerTypes.subList(pageBegin, pageEnd));
			
			BaseDAO.Commit();
		} catch (Exception e){
			logger.debug("[Yin.P DEBUG]-"+e.getMessage());
			BaseDAO.Rollback();
		}
		
		return mapping.findForward("customerTypeList");
	}
}