INFO	2008-11-04 15:11:03	/**
 * This is global object of whole application,
 * it dispatch request,hold global variables.
 * it will be only single instance of lifetime.
 *
 */
Object of class [ <user> class Fynd_Application extends Fynd_PublicPropertyClass ] {
  @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 14-274

  - Constants [0] {
  }

  - Static properties [2] {
    Property [ private static $_sessionStarted ]
    Property [ private static $_instance ]
  }

  - Static methods [9] {
    /**
     * single instance factory
     * @return Fynd_Application
     */
    Method [ <user> static public method getInstance ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 71 - 79
    }

    /**
     * Get path of application's controllers.
     *
     * @return string
     */
    Method [ <user> static public method getCtrlPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 85 - 88
    }

    /**
     * Get path of application's models.
     *
     * @return string
     */
    Method [ <user> static public method getModelPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 94 - 97
    }

    /**
     * Get path of application's views.
     *
     * @return string
     */
    Method [ <user> static public method getViewPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 103 - 106
    }

    /**
     * Get path of application's configures.
     *
     * @return string
     */
    Method [ <user> static public method getConfigPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 112 - 115
    }

    Method [ <user> static public method startSession ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 182 - 189
    }

    /**
     * Get the identity which identify whether session was started or not
     *
     * @return bool
     */
    Method [ <user> static public method getIsSessionStarted ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 195 - 198
    }

    /**
     * get a logger, which name is specifid by parameter $name,
     * this method will read LogConfig.xml by default to determine the log file path.
     *
     * @param string $name
     * @return Fynd_Log
     */
    Method [ <user> static public method getLogger ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 206 - 214

      - Parameters [1] {
        Parameter #0 [ <required> $name ]
      }
    }

    Method [ <user> static public method autoload ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 258 - 261

      - Parameters [1] {
        Parameter #0 [ <required> $class ]
      }
    }
  }

  - Properties [6] {
    Property [ <default> protected $_ctrlPath ]
    Property [ <default> protected $_viewPath ]
    Property [ <default> protected $_modelPath ]
    Property [ <default> protected $_configPath ]
    Property [ <default> protected $_workPath ]
    Property [ <default> protected $_log ]
  }

  - Dynamic properties [0] {
  }

  - Methods [10] {
    Method [ <user, ctor> private method __construct ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 116 - 117
    }

    /**
     * Get directory which application work in,end with '/'
     *
     * @return string
     */
    Method [ <user> public method getAppWorkPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 123 - 130
    }

    /**
     * Initialize application's execution environment,
     * read global configures etc.
     *
     */
    Method [ <user> public method init ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 136 - 154
    }

    /**
     * Go go go!
     * read request infomation,choose a proccessor to handle this request
     * and output result.
     *
     */
    Method [ <user> public method run ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 161 - 173
    }

    Method [ <user> private method _stop ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 174 - 181
    }

    /**
     * Load class defintion file from $class parameter
     *
     * @param string $class
     */
    Method [ <user> public method loadClass ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 220 - 257

      - Parameters [1] {
        Parameter #0 [ <required> $class ]
      }
    }

    /**
     * Register spl_autoload function
     *
     */
    Method [ <user> private method _registerAutoLoad ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 266 - 273
    }

    /**
	 * 设置公共属性值
	 *
	 * @param string $key
	 * @param mixed $value
	 */
    Method [ <user, inherits Fynd_PublicPropertyClass> public method __set ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\PublicPropertyClass.php 12 - 28

      - Parameters [2] {
        Parameter #0 [ <required> $key ]
        Parameter #1 [ <required> $value ]
      }
    }

    /**
	 * 获取公共属性值
	 *
	 * @param string $key
	 * @return mixed
	 */
    Method [ <user, inherits Fynd_PublicPropertyClass> public method __get ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\PublicPropertyClass.php 35 - 60

      - Parameters [1] {
        Parameter #0 [ <required> $key ]
      }
    }

    /**
	 * 获取类型
	 *
	 * @return ReflectionObject
	 */
    Method [ <user, inherits Fynd_PublicPropertyClass> public method getType ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\PublicPropertyClass.php 66 - 70
    }
  }
}
	Application started
INFO	2008-11-04 15:11:03	/**
 * This is global object of whole application,
 * it dispatch request,hold global variables.
 * it will be only single instance of lifetime.
 *
 */
Object of class [ <user> class Fynd_Application extends Fynd_PublicPropertyClass ] {
  @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 14-274

  - Constants [0] {
  }

  - Static properties [2] {
    Property [ private static $_sessionStarted ]
    Property [ private static $_instance ]
  }

  - Static methods [9] {
    /**
     * single instance factory
     * @return Fynd_Application
     */
    Method [ <user> static public method getInstance ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 71 - 79
    }

    /**
     * Get path of application's controllers.
     *
     * @return string
     */
    Method [ <user> static public method getCtrlPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 85 - 88
    }

    /**
     * Get path of application's models.
     *
     * @return string
     */
    Method [ <user> static public method getModelPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 94 - 97
    }

    /**
     * Get path of application's views.
     *
     * @return string
     */
    Method [ <user> static public method getViewPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 103 - 106
    }

    /**
     * Get path of application's configures.
     *
     * @return string
     */
    Method [ <user> static public method getConfigPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 112 - 115
    }

    Method [ <user> static public method startSession ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 182 - 189
    }

    /**
     * Get the identity which identify whether session was started or not
     *
     * @return bool
     */
    Method [ <user> static public method getIsSessionStarted ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 195 - 198
    }

    /**
     * get a logger, which name is specifid by parameter $name,
     * this method will read LogConfig.xml by default to determine the log file path.
     *
     * @param string $name
     * @return Fynd_Log
     */
    Method [ <user> static public method getLogger ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 206 - 214

      - Parameters [1] {
        Parameter #0 [ <required> $name ]
      }
    }

    Method [ <user> static public method autoload ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 258 - 261

      - Parameters [1] {
        Parameter #0 [ <required> $class ]
      }
    }
  }

  - Properties [6] {
    Property [ <default> protected $_ctrlPath ]
    Property [ <default> protected $_viewPath ]
    Property [ <default> protected $_modelPath ]
    Property [ <default> protected $_configPath ]
    Property [ <default> protected $_workPath ]
    Property [ <default> protected $_log ]
  }

  - Dynamic properties [0] {
  }

  - Methods [10] {
    Method [ <user, ctor> private method __construct ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 116 - 117
    }

    /**
     * Get directory which application work in,end with '/'
     *
     * @return string
     */
    Method [ <user> public method getAppWorkPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 123 - 130
    }

    /**
     * Initialize application's execution environment,
     * read global configures etc.
     *
     */
    Method [ <user> public method init ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 136 - 154
    }

    /**
     * Go go go!
     * read request infomation,choose a proccessor to handle this request
     * and output result.
     *
     */
    Method [ <user> public method run ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 161 - 173
    }

    Method [ <user> private method _stop ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 174 - 181
    }

    /**
     * Load class defintion file from $class parameter
     *
     * @param string $class
     */
    Method [ <user> public method loadClass ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 220 - 257

      - Parameters [1] {
        Parameter #0 [ <required> $class ]
      }
    }

    /**
     * Register spl_autoload function
     *
     */
    Method [ <user> private method _registerAutoLoad ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 266 - 273
    }

    /**
	 * 设置公共属性值
	 *
	 * @param string $key
	 * @param mixed $value
	 */
    Method [ <user, inherits Fynd_PublicPropertyClass> public method __set ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\PublicPropertyClass.php 12 - 28

      - Parameters [2] {
        Parameter #0 [ <required> $key ]
        Parameter #1 [ <required> $value ]
      }
    }

    /**
	 * 获取公共属性值
	 *
	 * @param string $key
	 * @return mixed
	 */
    Method [ <user, inherits Fynd_PublicPropertyClass> public method __get ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\PublicPropertyClass.php 35 - 60

      - Parameters [1] {
        Parameter #0 [ <required> $key ]
      }
    }

    /**
	 * 获取类型
	 *
	 * @return ReflectionObject
	 */
    Method [ <user, inherits Fynd_PublicPropertyClass> public method getType ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\PublicPropertyClass.php 66 - 70
    }
  }
}
	Application started
INFO	2008-11-04 15:11:03	/**
 * This is global object of whole application,
 * it dispatch request,hold global variables.
 * it will be only single instance of lifetime.
 *
 */
Object of class [ <user> class Fynd_Application extends Fynd_PublicPropertyClass ] {
  @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 14-274

  - Constants [0] {
  }

  - Static properties [2] {
    Property [ private static $_sessionStarted ]
    Property [ private static $_instance ]
  }

  - Static methods [9] {
    /**
     * single instance factory
     * @return Fynd_Application
     */
    Method [ <user> static public method getInstance ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 71 - 79
    }

    /**
     * Get path of application's controllers.
     *
     * @return string
     */
    Method [ <user> static public method getCtrlPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 85 - 88
    }

    /**
     * Get path of application's models.
     *
     * @return string
     */
    Method [ <user> static public method getModelPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 94 - 97
    }

    /**
     * Get path of application's views.
     *
     * @return string
     */
    Method [ <user> static public method getViewPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 103 - 106
    }

    /**
     * Get path of application's configures.
     *
     * @return string
     */
    Method [ <user> static public method getConfigPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 112 - 115
    }

    Method [ <user> static public method startSession ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 182 - 189
    }

    /**
     * Get the identity which identify whether session was started or not
     *
     * @return bool
     */
    Method [ <user> static public method getIsSessionStarted ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 195 - 198
    }

    /**
     * get a logger, which name is specifid by parameter $name,
     * this method will read LogConfig.xml by default to determine the log file path.
     *
     * @param string $name
     * @return Fynd_Log
     */
    Method [ <user> static public method getLogger ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 206 - 214

      - Parameters [1] {
        Parameter #0 [ <required> $name ]
      }
    }

    Method [ <user> static public method autoload ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 258 - 261

      - Parameters [1] {
        Parameter #0 [ <required> $class ]
      }
    }
  }

  - Properties [6] {
    Property [ <default> protected $_ctrlPath ]
    Property [ <default> protected $_viewPath ]
    Property [ <default> protected $_modelPath ]
    Property [ <default> protected $_configPath ]
    Property [ <default> protected $_workPath ]
    Property [ <default> protected $_log ]
  }

  - Dynamic properties [0] {
  }

  - Methods [10] {
    Method [ <user, ctor> private method __construct ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 116 - 117
    }

    /**
     * Get directory which application work in,end with '/'
     *
     * @return string
     */
    Method [ <user> public method getAppWorkPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 123 - 130
    }

    /**
     * Initialize application's execution environment,
     * read global configures etc.
     *
     */
    Method [ <user> public method init ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 136 - 154
    }

    /**
     * Go go go!
     * read request infomation,choose a proccessor to handle this request
     * and output result.
     *
     */
    Method [ <user> public method run ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 161 - 173
    }

    Method [ <user> private method _stop ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 174 - 181
    }

    /**
     * Load class defintion file from $class parameter
     *
     * @param string $class
     */
    Method [ <user> public method loadClass ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 220 - 257

      - Parameters [1] {
        Parameter #0 [ <required> $class ]
      }
    }

    /**
     * Register spl_autoload function
     *
     */
    Method [ <user> private method _registerAutoLoad ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 266 - 273
    }

    /**
	 * 设置公共属性值
	 *
	 * @param string $key
	 * @param mixed $value
	 */
    Method [ <user, inherits Fynd_PublicPropertyClass> public method __set ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\PublicPropertyClass.php 12 - 28

      - Parameters [2] {
        Parameter #0 [ <required> $key ]
        Parameter #1 [ <required> $value ]
      }
    }

    /**
	 * 获取公共属性值
	 *
	 * @param string $key
	 * @return mixed
	 */
    Method [ <user, inherits Fynd_PublicPropertyClass> public method __get ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\PublicPropertyClass.php 35 - 60

      - Parameters [1] {
        Parameter #0 [ <required> $key ]
      }
    }

    /**
	 * 获取类型
	 *
	 * @return ReflectionObject
	 */
    Method [ <user, inherits Fynd_PublicPropertyClass> public method getType ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\PublicPropertyClass.php 66 - 70
    }
  }
}
	Application started
INFO	2008-11-04 15:11:03	/**
 * This is global object of whole application,
 * it dispatch request,hold global variables.
 * it will be only single instance of lifetime.
 *
 */
Object of class [ <user> class Fynd_Application extends Fynd_PublicPropertyClass ] {
  @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 14-274

  - Constants [0] {
  }

  - Static properties [2] {
    Property [ private static $_sessionStarted ]
    Property [ private static $_instance ]
  }

  - Static methods [9] {
    /**
     * single instance factory
     * @return Fynd_Application
     */
    Method [ <user> static public method getInstance ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 71 - 79
    }

    /**
     * Get path of application's controllers.
     *
     * @return string
     */
    Method [ <user> static public method getCtrlPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 85 - 88
    }

    /**
     * Get path of application's models.
     *
     * @return string
     */
    Method [ <user> static public method getModelPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 94 - 97
    }

    /**
     * Get path of application's views.
     *
     * @return string
     */
    Method [ <user> static public method getViewPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 103 - 106
    }

    /**
     * Get path of application's configures.
     *
     * @return string
     */
    Method [ <user> static public method getConfigPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 112 - 115
    }

    Method [ <user> static public method startSession ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 182 - 189
    }

    /**
     * Get the identity which identify whether session was started or not
     *
     * @return bool
     */
    Method [ <user> static public method getIsSessionStarted ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 195 - 198
    }

    /**
     * get a logger, which name is specifid by parameter $name,
     * this method will read LogConfig.xml by default to determine the log file path.
     *
     * @param string $name
     * @return Fynd_Log
     */
    Method [ <user> static public method getLogger ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 206 - 214

      - Parameters [1] {
        Parameter #0 [ <required> $name ]
      }
    }

    Method [ <user> static public method autoload ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 258 - 261

      - Parameters [1] {
        Parameter #0 [ <required> $class ]
      }
    }
  }

  - Properties [6] {
    Property [ <default> protected $_ctrlPath ]
    Property [ <default> protected $_viewPath ]
    Property [ <default> protected $_modelPath ]
    Property [ <default> protected $_configPath ]
    Property [ <default> protected $_workPath ]
    Property [ <default> protected $_log ]
  }

  - Dynamic properties [0] {
  }

  - Methods [10] {
    Method [ <user, ctor> private method __construct ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 116 - 117
    }

    /**
     * Get directory which application work in,end with '/'
     *
     * @return string
     */
    Method [ <user> public method getAppWorkPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 123 - 130
    }

    /**
     * Initialize application's execution environment,
     * read global configures etc.
     *
     */
    Method [ <user> public method init ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 136 - 154
    }

    /**
     * Go go go!
     * read request infomation,choose a proccessor to handle this request
     * and output result.
     *
     */
    Method [ <user> public method run ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 161 - 173
    }

    Method [ <user> private method _stop ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 174 - 181
    }

    /**
     * Load class defintion file from $class parameter
     *
     * @param string $class
     */
    Method [ <user> public method loadClass ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 220 - 257

      - Parameters [1] {
        Parameter #0 [ <required> $class ]
      }
    }

    /**
     * Register spl_autoload function
     *
     */
    Method [ <user> private method _registerAutoLoad ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 266 - 273
    }

    /**
	 * 设置公共属性值
	 *
	 * @param string $key
	 * @param mixed $value
	 */
    Method [ <user, inherits Fynd_PublicPropertyClass> public method __set ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\PublicPropertyClass.php 12 - 28

      - Parameters [2] {
        Parameter #0 [ <required> $key ]
        Parameter #1 [ <required> $value ]
      }
    }

    /**
	 * 获取公共属性值
	 *
	 * @param string $key
	 * @return mixed
	 */
    Method [ <user, inherits Fynd_PublicPropertyClass> public method __get ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\PublicPropertyClass.php 35 - 60

      - Parameters [1] {
        Parameter #0 [ <required> $key ]
      }
    }

    /**
	 * 获取类型
	 *
	 * @return ReflectionObject
	 */
    Method [ <user, inherits Fynd_PublicPropertyClass> public method getType ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\PublicPropertyClass.php 66 - 70
    }
  }
}
	Application started
INFO	2008-11-04 15:11:03	/**
 * This is global object of whole application,
 * it dispatch request,hold global variables.
 * it will be only single instance of lifetime.
 *
 */
Object of class [ <user> class Fynd_Application extends Fynd_PublicPropertyClass ] {
  @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 14-274

  - Constants [0] {
  }

  - Static properties [2] {
    Property [ private static $_sessionStarted ]
    Property [ private static $_instance ]
  }

  - Static methods [9] {
    /**
     * single instance factory
     * @return Fynd_Application
     */
    Method [ <user> static public method getInstance ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 71 - 79
    }

    /**
     * Get path of application's controllers.
     *
     * @return string
     */
    Method [ <user> static public method getCtrlPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 85 - 88
    }

    /**
     * Get path of application's models.
     *
     * @return string
     */
    Method [ <user> static public method getModelPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 94 - 97
    }

    /**
     * Get path of application's views.
     *
     * @return string
     */
    Method [ <user> static public method getViewPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 103 - 106
    }

    /**
     * Get path of application's configures.
     *
     * @return string
     */
    Method [ <user> static public method getConfigPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 112 - 115
    }

    Method [ <user> static public method startSession ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 182 - 189
    }

    /**
     * Get the identity which identify whether session was started or not
     *
     * @return bool
     */
    Method [ <user> static public method getIsSessionStarted ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 195 - 198
    }

    /**
     * get a logger, which name is specifid by parameter $name,
     * this method will read LogConfig.xml by default to determine the log file path.
     *
     * @param string $name
     * @return Fynd_Log
     */
    Method [ <user> static public method getLogger ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 206 - 214

      - Parameters [1] {
        Parameter #0 [ <required> $name ]
      }
    }

    Method [ <user> static public method autoload ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 258 - 261

      - Parameters [1] {
        Parameter #0 [ <required> $class ]
      }
    }
  }

  - Properties [6] {
    Property [ <default> protected $_ctrlPath ]
    Property [ <default> protected $_viewPath ]
    Property [ <default> protected $_modelPath ]
    Property [ <default> protected $_configPath ]
    Property [ <default> protected $_workPath ]
    Property [ <default> protected $_log ]
  }

  - Dynamic properties [0] {
  }

  - Methods [10] {
    Method [ <user, ctor> private method __construct ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 116 - 117
    }

    /**
     * Get directory which application work in,end with '/'
     *
     * @return string
     */
    Method [ <user> public method getAppWorkPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 123 - 130
    }

    /**
     * Initialize application's execution environment,
     * read global configures etc.
     *
     */
    Method [ <user> public method init ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 136 - 154
    }

    /**
     * Go go go!
     * read request infomation,choose a proccessor to handle this request
     * and output result.
     *
     */
    Method [ <user> public method run ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 161 - 173
    }

    Method [ <user> private method _stop ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 174 - 181
    }

    /**
     * Load class defintion file from $class parameter
     *
     * @param string $class
     */
    Method [ <user> public method loadClass ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 220 - 257

      - Parameters [1] {
        Parameter #0 [ <required> $class ]
      }
    }

    /**
     * Register spl_autoload function
     *
     */
    Method [ <user> private method _registerAutoLoad ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 266 - 273
    }

    /**
	 * 设置公共属性值
	 *
	 * @param string $key
	 * @param mixed $value
	 */
    Method [ <user, inherits Fynd_PublicPropertyClass> public method __set ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\PublicPropertyClass.php 12 - 28

      - Parameters [2] {
        Parameter #0 [ <required> $key ]
        Parameter #1 [ <required> $value ]
      }
    }

    /**
	 * 获取公共属性值
	 *
	 * @param string $key
	 * @return mixed
	 */
    Method [ <user, inherits Fynd_PublicPropertyClass> public method __get ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\PublicPropertyClass.php 35 - 60

      - Parameters [1] {
        Parameter #0 [ <required> $key ]
      }
    }

    /**
	 * 获取类型
	 *
	 * @return ReflectionObject
	 */
    Method [ <user, inherits Fynd_PublicPropertyClass> public method getType ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\PublicPropertyClass.php 66 - 70
    }
  }
}
	Application started
INFO	2008-11-04 15:11:03	/**
 * This is global object of whole application,
 * it dispatch request,hold global variables.
 * it will be only single instance of lifetime.
 *
 */
Object of class [ <user> class Fynd_Application extends Fynd_PublicPropertyClass ] {
  @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 14-274

  - Constants [0] {
  }

  - Static properties [2] {
    Property [ private static $_sessionStarted ]
    Property [ private static $_instance ]
  }

  - Static methods [9] {
    /**
     * single instance factory
     * @return Fynd_Application
     */
    Method [ <user> static public method getInstance ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 71 - 79
    }

    /**
     * Get path of application's controllers.
     *
     * @return string
     */
    Method [ <user> static public method getCtrlPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 85 - 88
    }

    /**
     * Get path of application's models.
     *
     * @return string
     */
    Method [ <user> static public method getModelPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 94 - 97
    }

    /**
     * Get path of application's views.
     *
     * @return string
     */
    Method [ <user> static public method getViewPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 103 - 106
    }

    /**
     * Get path of application's configures.
     *
     * @return string
     */
    Method [ <user> static public method getConfigPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 112 - 115
    }

    Method [ <user> static public method startSession ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 182 - 189
    }

    /**
     * Get the identity which identify whether session was started or not
     *
     * @return bool
     */
    Method [ <user> static public method getIsSessionStarted ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 195 - 198
    }

    /**
     * get a logger, which name is specifid by parameter $name,
     * this method will read LogConfig.xml by default to determine the log file path.
     *
     * @param string $name
     * @return Fynd_Log
     */
    Method [ <user> static public method getLogger ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 206 - 214

      - Parameters [1] {
        Parameter #0 [ <required> $name ]
      }
    }

    Method [ <user> static public method autoload ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 258 - 261

      - Parameters [1] {
        Parameter #0 [ <required> $class ]
      }
    }
  }

  - Properties [6] {
    Property [ <default> protected $_ctrlPath ]
    Property [ <default> protected $_viewPath ]
    Property [ <default> protected $_modelPath ]
    Property [ <default> protected $_configPath ]
    Property [ <default> protected $_workPath ]
    Property [ <default> protected $_log ]
  }

  - Dynamic properties [0] {
  }

  - Methods [10] {
    Method [ <user, ctor> private method __construct ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 116 - 117
    }

    /**
     * Get directory which application work in,end with '/'
     *
     * @return string
     */
    Method [ <user> public method getAppWorkPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 123 - 130
    }

    /**
     * Initialize application's execution environment,
     * read global configures etc.
     *
     */
    Method [ <user> public method init ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 136 - 154
    }

    /**
     * Go go go!
     * read request infomation,choose a proccessor to handle this request
     * and output result.
     *
     */
    Method [ <user> public method run ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 161 - 173
    }

    Method [ <user> private method _stop ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 174 - 181
    }

    /**
     * Load class defintion file from $class parameter
     *
     * @param string $class
     */
    Method [ <user> public method loadClass ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 220 - 257

      - Parameters [1] {
        Parameter #0 [ <required> $class ]
      }
    }

    /**
     * Register spl_autoload function
     *
     */
    Method [ <user> private method _registerAutoLoad ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 266 - 273
    }

    /**
	 * 设置公共属性值
	 *
	 * @param string $key
	 * @param mixed $value
	 */
    Method [ <user, inherits Fynd_PublicPropertyClass> public method __set ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\PublicPropertyClass.php 12 - 28

      - Parameters [2] {
        Parameter #0 [ <required> $key ]
        Parameter #1 [ <required> $value ]
      }
    }

    /**
	 * 获取公共属性值
	 *
	 * @param string $key
	 * @return mixed
	 */
    Method [ <user, inherits Fynd_PublicPropertyClass> public method __get ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\PublicPropertyClass.php 35 - 60

      - Parameters [1] {
        Parameter #0 [ <required> $key ]
      }
    }

    /**
	 * 获取类型
	 *
	 * @return ReflectionObject
	 */
    Method [ <user, inherits Fynd_PublicPropertyClass> public method getType ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\PublicPropertyClass.php 66 - 70
    }
  }
}
	Application started
INFO	2008-11-04 15:11:03	/**
 * This is global object of whole application,
 * it dispatch request,hold global variables.
 * it will be only single instance of lifetime.
 *
 */
Object of class [ <user> class Fynd_Application extends Fynd_PublicPropertyClass ] {
  @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 14-274

  - Constants [0] {
  }

  - Static properties [2] {
    Property [ private static $_sessionStarted ]
    Property [ private static $_instance ]
  }

  - Static methods [9] {
    /**
     * single instance factory
     * @return Fynd_Application
     */
    Method [ <user> static public method getInstance ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 71 - 79
    }

    /**
     * Get path of application's controllers.
     *
     * @return string
     */
    Method [ <user> static public method getCtrlPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 85 - 88
    }

    /**
     * Get path of application's models.
     *
     * @return string
     */
    Method [ <user> static public method getModelPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 94 - 97
    }

    /**
     * Get path of application's views.
     *
     * @return string
     */
    Method [ <user> static public method getViewPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 103 - 106
    }

    /**
     * Get path of application's configures.
     *
     * @return string
     */
    Method [ <user> static public method getConfigPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 112 - 115
    }

    Method [ <user> static public method startSession ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 182 - 189
    }

    /**
     * Get the identity which identify whether session was started or not
     *
     * @return bool
     */
    Method [ <user> static public method getIsSessionStarted ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 195 - 198
    }

    /**
     * get a logger, which name is specifid by parameter $name,
     * this method will read LogConfig.xml by default to determine the log file path.
     *
     * @param string $name
     * @return Fynd_Log
     */
    Method [ <user> static public method getLogger ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 206 - 214

      - Parameters [1] {
        Parameter #0 [ <required> $name ]
      }
    }

    Method [ <user> static public method autoload ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 258 - 261

      - Parameters [1] {
        Parameter #0 [ <required> $class ]
      }
    }
  }

  - Properties [6] {
    Property [ <default> protected $_ctrlPath ]
    Property [ <default> protected $_viewPath ]
    Property [ <default> protected $_modelPath ]
    Property [ <default> protected $_configPath ]
    Property [ <default> protected $_workPath ]
    Property [ <default> protected $_log ]
  }

  - Dynamic properties [0] {
  }

  - Methods [10] {
    Method [ <user, ctor> private method __construct ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 116 - 117
    }

    /**
     * Get directory which application work in,end with '/'
     *
     * @return string
     */
    Method [ <user> public method getAppWorkPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 123 - 130
    }

    /**
     * Initialize application's execution environment,
     * read global configures etc.
     *
     */
    Method [ <user> public method init ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 136 - 154
    }

    /**
     * Go go go!
     * read request infomation,choose a proccessor to handle this request
     * and output result.
     *
     */
    Method [ <user> public method run ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 161 - 173
    }

    Method [ <user> private method _stop ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 174 - 181
    }

    /**
     * Load class defintion file from $class parameter
     *
     * @param string $class
     */
    Method [ <user> public method loadClass ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 220 - 257

      - Parameters [1] {
        Parameter #0 [ <required> $class ]
      }
    }

    /**
     * Register spl_autoload function
     *
     */
    Method [ <user> private method _registerAutoLoad ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 266 - 273
    }

    /**
	 * 设置公共属性值
	 *
	 * @param string $key
	 * @param mixed $value
	 */
    Method [ <user, inherits Fynd_PublicPropertyClass> public method __set ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\PublicPropertyClass.php 12 - 28

      - Parameters [2] {
        Parameter #0 [ <required> $key ]
        Parameter #1 [ <required> $value ]
      }
    }

    /**
	 * 获取公共属性值
	 *
	 * @param string $key
	 * @return mixed
	 */
    Method [ <user, inherits Fynd_PublicPropertyClass> public method __get ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\PublicPropertyClass.php 35 - 60

      - Parameters [1] {
        Parameter #0 [ <required> $key ]
      }
    }

    /**
	 * 获取类型
	 *
	 * @return ReflectionObject
	 */
    Method [ <user, inherits Fynd_PublicPropertyClass> public method getType ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\PublicPropertyClass.php 66 - 70
    }
  }
}
	Application started
INFO	2008-11-04 15:11:03	/**
 * This is global object of whole application,
 * it dispatch request,hold global variables.
 * it will be only single instance of lifetime.
 *
 */
Object of class [ <user> class Fynd_Application extends Fynd_PublicPropertyClass ] {
  @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 14-274

  - Constants [0] {
  }

  - Static properties [2] {
    Property [ private static $_sessionStarted ]
    Property [ private static $_instance ]
  }

  - Static methods [9] {
    /**
     * single instance factory
     * @return Fynd_Application
     */
    Method [ <user> static public method getInstance ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 71 - 79
    }

    /**
     * Get path of application's controllers.
     *
     * @return string
     */
    Method [ <user> static public method getCtrlPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 85 - 88
    }

    /**
     * Get path of application's models.
     *
     * @return string
     */
    Method [ <user> static public method getModelPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 94 - 97
    }

    /**
     * Get path of application's views.
     *
     * @return string
     */
    Method [ <user> static public method getViewPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 103 - 106
    }

    /**
     * Get path of application's configures.
     *
     * @return string
     */
    Method [ <user> static public method getConfigPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 112 - 115
    }

    Method [ <user> static public method startSession ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 182 - 189
    }

    /**
     * Get the identity which identify whether session was started or not
     *
     * @return bool
     */
    Method [ <user> static public method getIsSessionStarted ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 195 - 198
    }

    /**
     * get a logger, which name is specifid by parameter $name,
     * this method will read LogConfig.xml by default to determine the log file path.
     *
     * @param string $name
     * @return Fynd_Log
     */
    Method [ <user> static public method getLogger ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 206 - 214

      - Parameters [1] {
        Parameter #0 [ <required> $name ]
      }
    }

    Method [ <user> static public method autoload ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 258 - 261

      - Parameters [1] {
        Parameter #0 [ <required> $class ]
      }
    }
  }

  - Properties [6] {
    Property [ <default> protected $_ctrlPath ]
    Property [ <default> protected $_viewPath ]
    Property [ <default> protected $_modelPath ]
    Property [ <default> protected $_configPath ]
    Property [ <default> protected $_workPath ]
    Property [ <default> protected $_log ]
  }

  - Dynamic properties [0] {
  }

  - Methods [10] {
    Method [ <user, ctor> private method __construct ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 116 - 117
    }

    /**
     * Get directory which application work in,end with '/'
     *
     * @return string
     */
    Method [ <user> public method getAppWorkPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 123 - 130
    }

    /**
     * Initialize application's execution environment,
     * read global configures etc.
     *
     */
    Method [ <user> public method init ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 136 - 154
    }

    /**
     * Go go go!
     * read request infomation,choose a proccessor to handle this request
     * and output result.
     *
     */
    Method [ <user> public method run ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 161 - 173
    }

    Method [ <user> private method _stop ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 174 - 181
    }

    /**
     * Load class defintion file from $class parameter
     *
     * @param string $class
     */
    Method [ <user> public method loadClass ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 220 - 257

      - Parameters [1] {
        Parameter #0 [ <required> $class ]
      }
    }

    /**
     * Register spl_autoload function
     *
     */
    Method [ <user> private method _registerAutoLoad ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 266 - 273
    }

    /**
	 * 设置公共属性值
	 *
	 * @param string $key
	 * @param mixed $value
	 */
    Method [ <user, inherits Fynd_PublicPropertyClass> public method __set ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\PublicPropertyClass.php 12 - 28

      - Parameters [2] {
        Parameter #0 [ <required> $key ]
        Parameter #1 [ <required> $value ]
      }
    }

    /**
	 * 获取公共属性值
	 *
	 * @param string $key
	 * @return mixed
	 */
    Method [ <user, inherits Fynd_PublicPropertyClass> public method __get ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\PublicPropertyClass.php 35 - 60

      - Parameters [1] {
        Parameter #0 [ <required> $key ]
      }
    }

    /**
	 * 获取类型
	 *
	 * @return ReflectionObject
	 */
    Method [ <user, inherits Fynd_PublicPropertyClass> public method getType ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\PublicPropertyClass.php 66 - 70
    }
  }
}
	Application started
INFO	2008-11-04 15:11:03	/**
 * This is global object of whole application,
 * it dispatch request,hold global variables.
 * it will be only single instance of lifetime.
 *
 */
Object of class [ <user> class Fynd_Application extends Fynd_PublicPropertyClass ] {
  @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 14-274

  - Constants [0] {
  }

  - Static properties [2] {
    Property [ private static $_sessionStarted ]
    Property [ private static $_instance ]
  }

  - Static methods [9] {
    /**
     * single instance factory
     * @return Fynd_Application
     */
    Method [ <user> static public method getInstance ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 71 - 79
    }

    /**
     * Get path of application's controllers.
     *
     * @return string
     */
    Method [ <user> static public method getCtrlPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 85 - 88
    }

    /**
     * Get path of application's models.
     *
     * @return string
     */
    Method [ <user> static public method getModelPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 94 - 97
    }

    /**
     * Get path of application's views.
     *
     * @return string
     */
    Method [ <user> static public method getViewPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 103 - 106
    }

    /**
     * Get path of application's configures.
     *
     * @return string
     */
    Method [ <user> static public method getConfigPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 112 - 115
    }

    Method [ <user> static public method startSession ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 182 - 189
    }

    /**
     * Get the identity which identify whether session was started or not
     *
     * @return bool
     */
    Method [ <user> static public method getIsSessionStarted ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 195 - 198
    }

    /**
     * get a logger, which name is specifid by parameter $name,
     * this method will read LogConfig.xml by default to determine the log file path.
     *
     * @param string $name
     * @return Fynd_Log
     */
    Method [ <user> static public method getLogger ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 206 - 214

      - Parameters [1] {
        Parameter #0 [ <required> $name ]
      }
    }

    Method [ <user> static public method autoload ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 258 - 261

      - Parameters [1] {
        Parameter #0 [ <required> $class ]
      }
    }
  }

  - Properties [6] {
    Property [ <default> protected $_ctrlPath ]
    Property [ <default> protected $_viewPath ]
    Property [ <default> protected $_modelPath ]
    Property [ <default> protected $_configPath ]
    Property [ <default> protected $_workPath ]
    Property [ <default> protected $_log ]
  }

  - Dynamic properties [0] {
  }

  - Methods [10] {
    Method [ <user, ctor> private method __construct ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 116 - 117
    }

    /**
     * Get directory which application work in,end with '/'
     *
     * @return string
     */
    Method [ <user> public method getAppWorkPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 123 - 130
    }

    /**
     * Initialize application's execution environment,
     * read global configures etc.
     *
     */
    Method [ <user> public method init ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 136 - 154
    }

    /**
     * Go go go!
     * read request infomation,choose a proccessor to handle this request
     * and output result.
     *
     */
    Method [ <user> public method run ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 161 - 173
    }

    Method [ <user> private method _stop ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 174 - 181
    }

    /**
     * Load class defintion file from $class parameter
     *
     * @param string $class
     */
    Method [ <user> public method loadClass ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 220 - 257

      - Parameters [1] {
        Parameter #0 [ <required> $class ]
      }
    }

    /**
     * Register spl_autoload function
     *
     */
    Method [ <user> private method _registerAutoLoad ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 266 - 273
    }

    /**
	 * 设置公共属性值
	 *
	 * @param string $key
	 * @param mixed $value
	 */
    Method [ <user, inherits Fynd_PublicPropertyClass> public method __set ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\PublicPropertyClass.php 12 - 28

      - Parameters [2] {
        Parameter #0 [ <required> $key ]
        Parameter #1 [ <required> $value ]
      }
    }

    /**
	 * 获取公共属性值
	 *
	 * @param string $key
	 * @return mixed
	 */
    Method [ <user, inherits Fynd_PublicPropertyClass> public method __get ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\PublicPropertyClass.php 35 - 60

      - Parameters [1] {
        Parameter #0 [ <required> $key ]
      }
    }

    /**
	 * 获取类型
	 *
	 * @return ReflectionObject
	 */
    Method [ <user, inherits Fynd_PublicPropertyClass> public method getType ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\PublicPropertyClass.php 66 - 70
    }
  }
}
	Application started
INFO	2008-11-04 15:11:03	/**
 * This is global object of whole application,
 * it dispatch request,hold global variables.
 * it will be only single instance of lifetime.
 *
 */
Object of class [ <user> class Fynd_Application extends Fynd_PublicPropertyClass ] {
  @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 14-274

  - Constants [0] {
  }

  - Static properties [2] {
    Property [ private static $_sessionStarted ]
    Property [ private static $_instance ]
  }

  - Static methods [9] {
    /**
     * single instance factory
     * @return Fynd_Application
     */
    Method [ <user> static public method getInstance ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 71 - 79
    }

    /**
     * Get path of application's controllers.
     *
     * @return string
     */
    Method [ <user> static public method getCtrlPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 85 - 88
    }

    /**
     * Get path of application's models.
     *
     * @return string
     */
    Method [ <user> static public method getModelPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 94 - 97
    }

    /**
     * Get path of application's views.
     *
     * @return string
     */
    Method [ <user> static public method getViewPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 103 - 106
    }

    /**
     * Get path of application's configures.
     *
     * @return string
     */
    Method [ <user> static public method getConfigPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 112 - 115
    }

    Method [ <user> static public method startSession ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 182 - 189
    }

    /**
     * Get the identity which identify whether session was started or not
     *
     * @return bool
     */
    Method [ <user> static public method getIsSessionStarted ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 195 - 198
    }

    /**
     * get a logger, which name is specifid by parameter $name,
     * this method will read LogConfig.xml by default to determine the log file path.
     *
     * @param string $name
     * @return Fynd_Log
     */
    Method [ <user> static public method getLogger ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 206 - 214

      - Parameters [1] {
        Parameter #0 [ <required> $name ]
      }
    }

    Method [ <user> static public method autoload ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 258 - 261

      - Parameters [1] {
        Parameter #0 [ <required> $class ]
      }
    }
  }

  - Properties [6] {
    Property [ <default> protected $_ctrlPath ]
    Property [ <default> protected $_viewPath ]
    Property [ <default> protected $_modelPath ]
    Property [ <default> protected $_configPath ]
    Property [ <default> protected $_workPath ]
    Property [ <default> protected $_log ]
  }

  - Dynamic properties [0] {
  }

  - Methods [10] {
    Method [ <user, ctor> private method __construct ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 116 - 117
    }

    /**
     * Get directory which application work in,end with '/'
     *
     * @return string
     */
    Method [ <user> public method getAppWorkPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 123 - 130
    }

    /**
     * Initialize application's execution environment,
     * read global configures etc.
     *
     */
    Method [ <user> public method init ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 136 - 154
    }

    /**
     * Go go go!
     * read request infomation,choose a proccessor to handle this request
     * and output result.
     *
     */
    Method [ <user> public method run ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 161 - 173
    }

    Method [ <user> private method _stop ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 174 - 181
    }

    /**
     * Load class defintion file from $class parameter
     *
     * @param string $class
     */
    Method [ <user> public method loadClass ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 220 - 257

      - Parameters [1] {
        Parameter #0 [ <required> $class ]
      }
    }

    /**
     * Register spl_autoload function
     *
     */
    Method [ <user> private method _registerAutoLoad ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 266 - 273
    }

    /**
	 * 设置公共属性值
	 *
	 * @param string $key
	 * @param mixed $value
	 */
    Method [ <user, inherits Fynd_PublicPropertyClass> public method __set ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\PublicPropertyClass.php 12 - 28

      - Parameters [2] {
        Parameter #0 [ <required> $key ]
        Parameter #1 [ <required> $value ]
      }
    }

    /**
	 * 获取公共属性值
	 *
	 * @param string $key
	 * @return mixed
	 */
    Method [ <user, inherits Fynd_PublicPropertyClass> public method __get ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\PublicPropertyClass.php 35 - 60

      - Parameters [1] {
        Parameter #0 [ <required> $key ]
      }
    }

    /**
	 * 获取类型
	 *
	 * @return ReflectionObject
	 */
    Method [ <user, inherits Fynd_PublicPropertyClass> public method getType ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\PublicPropertyClass.php 66 - 70
    }
  }
}
	Application started
INFO	2008-11-04 15:11:03	/**
 * This is global object of whole application,
 * it dispatch request,hold global variables.
 * it will be only single instance of lifetime.
 *
 */
Object of class [ <user> class Fynd_Application extends Fynd_PublicPropertyClass ] {
  @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 14-274

  - Constants [0] {
  }

  - Static properties [2] {
    Property [ private static $_sessionStarted ]
    Property [ private static $_instance ]
  }

  - Static methods [9] {
    /**
     * single instance factory
     * @return Fynd_Application
     */
    Method [ <user> static public method getInstance ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 71 - 79
    }

    /**
     * Get path of application's controllers.
     *
     * @return string
     */
    Method [ <user> static public method getCtrlPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 85 - 88
    }

    /**
     * Get path of application's models.
     *
     * @return string
     */
    Method [ <user> static public method getModelPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 94 - 97
    }

    /**
     * Get path of application's views.
     *
     * @return string
     */
    Method [ <user> static public method getViewPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 103 - 106
    }

    /**
     * Get path of application's configures.
     *
     * @return string
     */
    Method [ <user> static public method getConfigPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 112 - 115
    }

    Method [ <user> static public method startSession ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 182 - 189
    }

    /**
     * Get the identity which identify whether session was started or not
     *
     * @return bool
     */
    Method [ <user> static public method getIsSessionStarted ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 195 - 198
    }

    /**
     * get a logger, which name is specifid by parameter $name,
     * this method will read LogConfig.xml by default to determine the log file path.
     *
     * @param string $name
     * @return Fynd_Log
     */
    Method [ <user> static public method getLogger ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 206 - 214

      - Parameters [1] {
        Parameter #0 [ <required> $name ]
      }
    }

    Method [ <user> static public method autoload ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 258 - 261

      - Parameters [1] {
        Parameter #0 [ <required> $class ]
      }
    }
  }

  - Properties [6] {
    Property [ <default> protected $_ctrlPath ]
    Property [ <default> protected $_viewPath ]
    Property [ <default> protected $_modelPath ]
    Property [ <default> protected $_configPath ]
    Property [ <default> protected $_workPath ]
    Property [ <default> protected $_log ]
  }

  - Dynamic properties [0] {
  }

  - Methods [10] {
    Method [ <user, ctor> private method __construct ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 116 - 117
    }

    /**
     * Get directory which application work in,end with '/'
     *
     * @return string
     */
    Method [ <user> public method getAppWorkPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 123 - 130
    }

    /**
     * Initialize application's execution environment,
     * read global configures etc.
     *
     */
    Method [ <user> public method init ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 136 - 154
    }

    /**
     * Go go go!
     * read request infomation,choose a proccessor to handle this request
     * and output result.
     *
     */
    Method [ <user> public method run ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 161 - 173
    }

    Method [ <user> private method _stop ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 174 - 181
    }

    /**
     * Load class defintion file from $class parameter
     *
     * @param string $class
     */
    Method [ <user> public method loadClass ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 220 - 257

      - Parameters [1] {
        Parameter #0 [ <required> $class ]
      }
    }

    /**
     * Register spl_autoload function
     *
     */
    Method [ <user> private method _registerAutoLoad ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 266 - 273
    }

    /**
	 * 设置公共属性值
	 *
	 * @param string $key
	 * @param mixed $value
	 */
    Method [ <user, inherits Fynd_PublicPropertyClass> public method __set ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\PublicPropertyClass.php 12 - 28

      - Parameters [2] {
        Parameter #0 [ <required> $key ]
        Parameter #1 [ <required> $value ]
      }
    }

    /**
	 * 获取公共属性值
	 *
	 * @param string $key
	 * @return mixed
	 */
    Method [ <user, inherits Fynd_PublicPropertyClass> public method __get ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\PublicPropertyClass.php 35 - 60

      - Parameters [1] {
        Parameter #0 [ <required> $key ]
      }
    }

    /**
	 * 获取类型
	 *
	 * @return ReflectionObject
	 */
    Method [ <user, inherits Fynd_PublicPropertyClass> public method getType ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\PublicPropertyClass.php 66 - 70
    }
  }
}
	Application started
INFO	2008-11-04 15:11:30	/**
 * This is global object of whole application,
 * it dispatch request,hold global variables.
 * it will be only single instance of lifetime.
 *
 */
Object of class [ <user> class Fynd_Application extends Fynd_PublicPropertyClass ] {
  @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 14-274

  - Constants [0] {
  }

  - Static properties [2] {
    Property [ private static $_sessionStarted ]
    Property [ private static $_instance ]
  }

  - Static methods [9] {
    /**
     * single instance factory
     * @return Fynd_Application
     */
    Method [ <user> static public method getInstance ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 71 - 79
    }

    /**
     * Get path of application's controllers.
     *
     * @return string
     */
    Method [ <user> static public method getCtrlPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 85 - 88
    }

    /**
     * Get path of application's models.
     *
     * @return string
     */
    Method [ <user> static public method getModelPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 94 - 97
    }

    /**
     * Get path of application's views.
     *
     * @return string
     */
    Method [ <user> static public method getViewPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 103 - 106
    }

    /**
     * Get path of application's configures.
     *
     * @return string
     */
    Method [ <user> static public method getConfigPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 112 - 115
    }

    Method [ <user> static public method startSession ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 182 - 189
    }

    /**
     * Get the identity which identify whether session was started or not
     *
     * @return bool
     */
    Method [ <user> static public method getIsSessionStarted ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 195 - 198
    }

    /**
     * get a logger, which name is specifid by parameter $name,
     * this method will read LogConfig.xml by default to determine the log file path.
     *
     * @param string $name
     * @return Fynd_Log
     */
    Method [ <user> static public method getLogger ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 206 - 214

      - Parameters [1] {
        Parameter #0 [ <required> $name ]
      }
    }

    Method [ <user> static public method autoload ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 258 - 261

      - Parameters [1] {
        Parameter #0 [ <required> $class ]
      }
    }
  }

  - Properties [6] {
    Property [ <default> protected $_ctrlPath ]
    Property [ <default> protected $_viewPath ]
    Property [ <default> protected $_modelPath ]
    Property [ <default> protected $_configPath ]
    Property [ <default> protected $_workPath ]
    Property [ <default> protected $_log ]
  }

  - Dynamic properties [0] {
  }

  - Methods [10] {
    Method [ <user, ctor> private method __construct ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 116 - 117
    }

    /**
     * Get directory which application work in,end with '/'
     *
     * @return string
     */
    Method [ <user> public method getAppWorkPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 123 - 130
    }

    /**
     * Initialize application's execution environment,
     * read global configures etc.
     *
     */
    Method [ <user> public method init ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 136 - 154
    }

    /**
     * Go go go!
     * read request infomation,choose a proccessor to handle this request
     * and output result.
     *
     */
    Method [ <user> public method run ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 161 - 173
    }

    Method [ <user> private method _stop ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 174 - 181
    }

    /**
     * Load class defintion file from $class parameter
     *
     * @param string $class
     */
    Method [ <user> public method loadClass ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 220 - 257

      - Parameters [1] {
        Parameter #0 [ <required> $class ]
      }
    }

    /**
     * Register spl_autoload function
     *
     */
    Method [ <user> private method _registerAutoLoad ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 266 - 273
    }

    /**
	 * 设置公共属性值
	 *
	 * @param string $key
	 * @param mixed $value
	 */
    Method [ <user, inherits Fynd_PublicPropertyClass> public method __set ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\PublicPropertyClass.php 12 - 28

      - Parameters [2] {
        Parameter #0 [ <required> $key ]
        Parameter #1 [ <required> $value ]
      }
    }

    /**
	 * 获取公共属性值
	 *
	 * @param string $key
	 * @return mixed
	 */
    Method [ <user, inherits Fynd_PublicPropertyClass> public method __get ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\PublicPropertyClass.php 35 - 60

      - Parameters [1] {
        Parameter #0 [ <required> $key ]
      }
    }

    /**
	 * 获取类型
	 *
	 * @return ReflectionObject
	 */
    Method [ <user, inherits Fynd_PublicPropertyClass> public method getType ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\PublicPropertyClass.php 66 - 70
    }
  }
}
	Application started
INFO	2008-11-04 15:11:30	/**
 * This is global object of whole application,
 * it dispatch request,hold global variables.
 * it will be only single instance of lifetime.
 *
 */
Object of class [ <user> class Fynd_Application extends Fynd_PublicPropertyClass ] {
  @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 14-274

  - Constants [0] {
  }

  - Static properties [2] {
    Property [ private static $_sessionStarted ]
    Property [ private static $_instance ]
  }

  - Static methods [9] {
    /**
     * single instance factory
     * @return Fynd_Application
     */
    Method [ <user> static public method getInstance ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 71 - 79
    }

    /**
     * Get path of application's controllers.
     *
     * @return string
     */
    Method [ <user> static public method getCtrlPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 85 - 88
    }

    /**
     * Get path of application's models.
     *
     * @return string
     */
    Method [ <user> static public method getModelPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 94 - 97
    }

    /**
     * Get path of application's views.
     *
     * @return string
     */
    Method [ <user> static public method getViewPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 103 - 106
    }

    /**
     * Get path of application's configures.
     *
     * @return string
     */
    Method [ <user> static public method getConfigPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 112 - 115
    }

    Method [ <user> static public method startSession ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 182 - 189
    }

    /**
     * Get the identity which identify whether session was started or not
     *
     * @return bool
     */
    Method [ <user> static public method getIsSessionStarted ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 195 - 198
    }

    /**
     * get a logger, which name is specifid by parameter $name,
     * this method will read LogConfig.xml by default to determine the log file path.
     *
     * @param string $name
     * @return Fynd_Log
     */
    Method [ <user> static public method getLogger ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 206 - 214

      - Parameters [1] {
        Parameter #0 [ <required> $name ]
      }
    }

    Method [ <user> static public method autoload ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 258 - 261

      - Parameters [1] {
        Parameter #0 [ <required> $class ]
      }
    }
  }

  - Properties [6] {
    Property [ <default> protected $_ctrlPath ]
    Property [ <default> protected $_viewPath ]
    Property [ <default> protected $_modelPath ]
    Property [ <default> protected $_configPath ]
    Property [ <default> protected $_workPath ]
    Property [ <default> protected $_log ]
  }

  - Dynamic properties [0] {
  }

  - Methods [10] {
    Method [ <user, ctor> private method __construct ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 116 - 117
    }

    /**
     * Get directory which application work in,end with '/'
     *
     * @return string
     */
    Method [ <user> public method getAppWorkPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 123 - 130
    }

    /**
     * Initialize application's execution environment,
     * read global configures etc.
     *
     */
    Method [ <user> public method init ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 136 - 154
    }

    /**
     * Go go go!
     * read request infomation,choose a proccessor to handle this request
     * and output result.
     *
     */
    Method [ <user> public method run ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 161 - 173
    }

    Method [ <user> private method _stop ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 174 - 181
    }

    /**
     * Load class defintion file from $class parameter
     *
     * @param string $class
     */
    Method [ <user> public method loadClass ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 220 - 257

      - Parameters [1] {
        Parameter #0 [ <required> $class ]
      }
    }

    /**
     * Register spl_autoload function
     *
     */
    Method [ <user> private method _registerAutoLoad ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 266 - 273
    }

    /**
	 * 设置公共属性值
	 *
	 * @param string $key
	 * @param mixed $value
	 */
    Method [ <user, inherits Fynd_PublicPropertyClass> public method __set ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\PublicPropertyClass.php 12 - 28

      - Parameters [2] {
        Parameter #0 [ <required> $key ]
        Parameter #1 [ <required> $value ]
      }
    }

    /**
	 * 获取公共属性值
	 *
	 * @param string $key
	 * @return mixed
	 */
    Method [ <user, inherits Fynd_PublicPropertyClass> public method __get ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\PublicPropertyClass.php 35 - 60

      - Parameters [1] {
        Parameter #0 [ <required> $key ]
      }
    }

    /**
	 * 获取类型
	 *
	 * @return ReflectionObject
	 */
    Method [ <user, inherits Fynd_PublicPropertyClass> public method getType ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\PublicPropertyClass.php 66 - 70
    }
  }
}
	Application started
INFO	2008-11-04 15:11:30	/**
 * This is global object of whole application,
 * it dispatch request,hold global variables.
 * it will be only single instance of lifetime.
 *
 */
Object of class [ <user> class Fynd_Application extends Fynd_PublicPropertyClass ] {
  @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 14-274

  - Constants [0] {
  }

  - Static properties [2] {
    Property [ private static $_sessionStarted ]
    Property [ private static $_instance ]
  }

  - Static methods [9] {
    /**
     * single instance factory
     * @return Fynd_Application
     */
    Method [ <user> static public method getInstance ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 71 - 79
    }

    /**
     * Get path of application's controllers.
     *
     * @return string
     */
    Method [ <user> static public method getCtrlPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 85 - 88
    }

    /**
     * Get path of application's models.
     *
     * @return string
     */
    Method [ <user> static public method getModelPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 94 - 97
    }

    /**
     * Get path of application's views.
     *
     * @return string
     */
    Method [ <user> static public method getViewPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 103 - 106
    }

    /**
     * Get path of application's configures.
     *
     * @return string
     */
    Method [ <user> static public method getConfigPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 112 - 115
    }

    Method [ <user> static public method startSession ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 182 - 189
    }

    /**
     * Get the identity which identify whether session was started or not
     *
     * @return bool
     */
    Method [ <user> static public method getIsSessionStarted ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 195 - 198
    }

    /**
     * get a logger, which name is specifid by parameter $name,
     * this method will read LogConfig.xml by default to determine the log file path.
     *
     * @param string $name
     * @return Fynd_Log
     */
    Method [ <user> static public method getLogger ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 206 - 214

      - Parameters [1] {
        Parameter #0 [ <required> $name ]
      }
    }

    Method [ <user> static public method autoload ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 258 - 261

      - Parameters [1] {
        Parameter #0 [ <required> $class ]
      }
    }
  }

  - Properties [6] {
    Property [ <default> protected $_ctrlPath ]
    Property [ <default> protected $_viewPath ]
    Property [ <default> protected $_modelPath ]
    Property [ <default> protected $_configPath ]
    Property [ <default> protected $_workPath ]
    Property [ <default> protected $_log ]
  }

  - Dynamic properties [0] {
  }

  - Methods [10] {
    Method [ <user, ctor> private method __construct ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 116 - 117
    }

    /**
     * Get directory which application work in,end with '/'
     *
     * @return string
     */
    Method [ <user> public method getAppWorkPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 123 - 130
    }

    /**
     * Initialize application's execution environment,
     * read global configures etc.
     *
     */
    Method [ <user> public method init ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 136 - 154
    }

    /**
     * Go go go!
     * read request infomation,choose a proccessor to handle this request
     * and output result.
     *
     */
    Method [ <user> public method run ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 161 - 173
    }

    Method [ <user> private method _stop ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 174 - 181
    }

    /**
     * Load class defintion file from $class parameter
     *
     * @param string $class
     */
    Method [ <user> public method loadClass ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 220 - 257

      - Parameters [1] {
        Parameter #0 [ <required> $class ]
      }
    }

    /**
     * Register spl_autoload function
     *
     */
    Method [ <user> private method _registerAutoLoad ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 266 - 273
    }

    /**
	 * 设置公共属性值
	 *
	 * @param string $key
	 * @param mixed $value
	 */
    Method [ <user, inherits Fynd_PublicPropertyClass> public method __set ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\PublicPropertyClass.php 12 - 28

      - Parameters [2] {
        Parameter #0 [ <required> $key ]
        Parameter #1 [ <required> $value ]
      }
    }

    /**
	 * 获取公共属性值
	 *
	 * @param string $key
	 * @return mixed
	 */
    Method [ <user, inherits Fynd_PublicPropertyClass> public method __get ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\PublicPropertyClass.php 35 - 60

      - Parameters [1] {
        Parameter #0 [ <required> $key ]
      }
    }

    /**
	 * 获取类型
	 *
	 * @return ReflectionObject
	 */
    Method [ <user, inherits Fynd_PublicPropertyClass> public method getType ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\PublicPropertyClass.php 66 - 70
    }
  }
}
	Application started
INFO	2008-11-04 15:11:30	/**
 * This is global object of whole application,
 * it dispatch request,hold global variables.
 * it will be only single instance of lifetime.
 *
 */
Object of class [ <user> class Fynd_Application extends Fynd_PublicPropertyClass ] {
  @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 14-274

  - Constants [0] {
  }

  - Static properties [2] {
    Property [ private static $_sessionStarted ]
    Property [ private static $_instance ]
  }

  - Static methods [9] {
    /**
     * single instance factory
     * @return Fynd_Application
     */
    Method [ <user> static public method getInstance ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 71 - 79
    }

    /**
     * Get path of application's controllers.
     *
     * @return string
     */
    Method [ <user> static public method getCtrlPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 85 - 88
    }

    /**
     * Get path of application's models.
     *
     * @return string
     */
    Method [ <user> static public method getModelPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 94 - 97
    }

    /**
     * Get path of application's views.
     *
     * @return string
     */
    Method [ <user> static public method getViewPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 103 - 106
    }

    /**
     * Get path of application's configures.
     *
     * @return string
     */
    Method [ <user> static public method getConfigPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 112 - 115
    }

    Method [ <user> static public method startSession ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 182 - 189
    }

    /**
     * Get the identity which identify whether session was started or not
     *
     * @return bool
     */
    Method [ <user> static public method getIsSessionStarted ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 195 - 198
    }

    /**
     * get a logger, which name is specifid by parameter $name,
     * this method will read LogConfig.xml by default to determine the log file path.
     *
     * @param string $name
     * @return Fynd_Log
     */
    Method [ <user> static public method getLogger ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 206 - 214

      - Parameters [1] {
        Parameter #0 [ <required> $name ]
      }
    }

    Method [ <user> static public method autoload ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 258 - 261

      - Parameters [1] {
        Parameter #0 [ <required> $class ]
      }
    }
  }

  - Properties [6] {
    Property [ <default> protected $_ctrlPath ]
    Property [ <default> protected $_viewPath ]
    Property [ <default> protected $_modelPath ]
    Property [ <default> protected $_configPath ]
    Property [ <default> protected $_workPath ]
    Property [ <default> protected $_log ]
  }

  - Dynamic properties [0] {
  }

  - Methods [10] {
    Method [ <user, ctor> private method __construct ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 116 - 117
    }

    /**
     * Get directory which application work in,end with '/'
     *
     * @return string
     */
    Method [ <user> public method getAppWorkPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 123 - 130
    }

    /**
     * Initialize application's execution environment,
     * read global configures etc.
     *
     */
    Method [ <user> public method init ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 136 - 154
    }

    /**
     * Go go go!
     * read request infomation,choose a proccessor to handle this request
     * and output result.
     *
     */
    Method [ <user> public method run ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 161 - 173
    }

    Method [ <user> private method _stop ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 174 - 181
    }

    /**
     * Load class defintion file from $class parameter
     *
     * @param string $class
     */
    Method [ <user> public method loadClass ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 220 - 257

      - Parameters [1] {
        Parameter #0 [ <required> $class ]
      }
    }

    /**
     * Register spl_autoload function
     *
     */
    Method [ <user> private method _registerAutoLoad ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 266 - 273
    }

    /**
	 * 设置公共属性值
	 *
	 * @param string $key
	 * @param mixed $value
	 */
    Method [ <user, inherits Fynd_PublicPropertyClass> public method __set ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\PublicPropertyClass.php 12 - 28

      - Parameters [2] {
        Parameter #0 [ <required> $key ]
        Parameter #1 [ <required> $value ]
      }
    }

    /**
	 * 获取公共属性值
	 *
	 * @param string $key
	 * @return mixed
	 */
    Method [ <user, inherits Fynd_PublicPropertyClass> public method __get ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\PublicPropertyClass.php 35 - 60

      - Parameters [1] {
        Parameter #0 [ <required> $key ]
      }
    }

    /**
	 * 获取类型
	 *
	 * @return ReflectionObject
	 */
    Method [ <user, inherits Fynd_PublicPropertyClass> public method getType ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\PublicPropertyClass.php 66 - 70
    }
  }
}
	Application started
INFO	2008-11-04 15:11:30	/**
 * This is global object of whole application,
 * it dispatch request,hold global variables.
 * it will be only single instance of lifetime.
 *
 */
Object of class [ <user> class Fynd_Application extends Fynd_PublicPropertyClass ] {
  @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 14-274

  - Constants [0] {
  }

  - Static properties [2] {
    Property [ private static $_sessionStarted ]
    Property [ private static $_instance ]
  }

  - Static methods [9] {
    /**
     * single instance factory
     * @return Fynd_Application
     */
    Method [ <user> static public method getInstance ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 71 - 79
    }

    /**
     * Get path of application's controllers.
     *
     * @return string
     */
    Method [ <user> static public method getCtrlPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 85 - 88
    }

    /**
     * Get path of application's models.
     *
     * @return string
     */
    Method [ <user> static public method getModelPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 94 - 97
    }

    /**
     * Get path of application's views.
     *
     * @return string
     */
    Method [ <user> static public method getViewPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 103 - 106
    }

    /**
     * Get path of application's configures.
     *
     * @return string
     */
    Method [ <user> static public method getConfigPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 112 - 115
    }

    Method [ <user> static public method startSession ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 182 - 189
    }

    /**
     * Get the identity which identify whether session was started or not
     *
     * @return bool
     */
    Method [ <user> static public method getIsSessionStarted ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 195 - 198
    }

    /**
     * get a logger, which name is specifid by parameter $name,
     * this method will read LogConfig.xml by default to determine the log file path.
     *
     * @param string $name
     * @return Fynd_Log
     */
    Method [ <user> static public method getLogger ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 206 - 214

      - Parameters [1] {
        Parameter #0 [ <required> $name ]
      }
    }

    Method [ <user> static public method autoload ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 258 - 261

      - Parameters [1] {
        Parameter #0 [ <required> $class ]
      }
    }
  }

  - Properties [6] {
    Property [ <default> protected $_ctrlPath ]
    Property [ <default> protected $_viewPath ]
    Property [ <default> protected $_modelPath ]
    Property [ <default> protected $_configPath ]
    Property [ <default> protected $_workPath ]
    Property [ <default> protected $_log ]
  }

  - Dynamic properties [0] {
  }

  - Methods [10] {
    Method [ <user, ctor> private method __construct ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 116 - 117
    }

    /**
     * Get directory which application work in,end with '/'
     *
     * @return string
     */
    Method [ <user> public method getAppWorkPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 123 - 130
    }

    /**
     * Initialize application's execution environment,
     * read global configures etc.
     *
     */
    Method [ <user> public method init ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 136 - 154
    }

    /**
     * Go go go!
     * read request infomation,choose a proccessor to handle this request
     * and output result.
     *
     */
    Method [ <user> public method run ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 161 - 173
    }

    Method [ <user> private method _stop ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 174 - 181
    }

    /**
     * Load class defintion file from $class parameter
     *
     * @param string $class
     */
    Method [ <user> public method loadClass ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 220 - 257

      - Parameters [1] {
        Parameter #0 [ <required> $class ]
      }
    }

    /**
     * Register spl_autoload function
     *
     */
    Method [ <user> private method _registerAutoLoad ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 266 - 273
    }

    /**
	 * 设置公共属性值
	 *
	 * @param string $key
	 * @param mixed $value
	 */
    Method [ <user, inherits Fynd_PublicPropertyClass> public method __set ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\PublicPropertyClass.php 12 - 28

      - Parameters [2] {
        Parameter #0 [ <required> $key ]
        Parameter #1 [ <required> $value ]
      }
    }

    /**
	 * 获取公共属性值
	 *
	 * @param string $key
	 * @return mixed
	 */
    Method [ <user, inherits Fynd_PublicPropertyClass> public method __get ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\PublicPropertyClass.php 35 - 60

      - Parameters [1] {
        Parameter #0 [ <required> $key ]
      }
    }

    /**
	 * 获取类型
	 *
	 * @return ReflectionObject
	 */
    Method [ <user, inherits Fynd_PublicPropertyClass> public method getType ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\PublicPropertyClass.php 66 - 70
    }
  }
}
	Application started
INFO	2008-11-04 15:11:30	/**
 * This is global object of whole application,
 * it dispatch request,hold global variables.
 * it will be only single instance of lifetime.
 *
 */
Object of class [ <user> class Fynd_Application extends Fynd_PublicPropertyClass ] {
  @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 14-274

  - Constants [0] {
  }

  - Static properties [2] {
    Property [ private static $_sessionStarted ]
    Property [ private static $_instance ]
  }

  - Static methods [9] {
    /**
     * single instance factory
     * @return Fynd_Application
     */
    Method [ <user> static public method getInstance ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 71 - 79
    }

    /**
     * Get path of application's controllers.
     *
     * @return string
     */
    Method [ <user> static public method getCtrlPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 85 - 88
    }

    /**
     * Get path of application's models.
     *
     * @return string
     */
    Method [ <user> static public method getModelPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 94 - 97
    }

    /**
     * Get path of application's views.
     *
     * @return string
     */
    Method [ <user> static public method getViewPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 103 - 106
    }

    /**
     * Get path of application's configures.
     *
     * @return string
     */
    Method [ <user> static public method getConfigPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 112 - 115
    }

    Method [ <user> static public method startSession ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 182 - 189
    }

    /**
     * Get the identity which identify whether session was started or not
     *
     * @return bool
     */
    Method [ <user> static public method getIsSessionStarted ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 195 - 198
    }

    /**
     * get a logger, which name is specifid by parameter $name,
     * this method will read LogConfig.xml by default to determine the log file path.
     *
     * @param string $name
     * @return Fynd_Log
     */
    Method [ <user> static public method getLogger ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 206 - 214

      - Parameters [1] {
        Parameter #0 [ <required> $name ]
      }
    }

    Method [ <user> static public method autoload ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 258 - 261

      - Parameters [1] {
        Parameter #0 [ <required> $class ]
      }
    }
  }

  - Properties [6] {
    Property [ <default> protected $_ctrlPath ]
    Property [ <default> protected $_viewPath ]
    Property [ <default> protected $_modelPath ]
    Property [ <default> protected $_configPath ]
    Property [ <default> protected $_workPath ]
    Property [ <default> protected $_log ]
  }

  - Dynamic properties [0] {
  }

  - Methods [10] {
    Method [ <user, ctor> private method __construct ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 116 - 117
    }

    /**
     * Get directory which application work in,end with '/'
     *
     * @return string
     */
    Method [ <user> public method getAppWorkPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 123 - 130
    }

    /**
     * Initialize application's execution environment,
     * read global configures etc.
     *
     */
    Method [ <user> public method init ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 136 - 154
    }

    /**
     * Go go go!
     * read request infomation,choose a proccessor to handle this request
     * and output result.
     *
     */
    Method [ <user> public method run ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 161 - 173
    }

    Method [ <user> private method _stop ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 174 - 181
    }

    /**
     * Load class defintion file from $class parameter
     *
     * @param string $class
     */
    Method [ <user> public method loadClass ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 220 - 257

      - Parameters [1] {
        Parameter #0 [ <required> $class ]
      }
    }

    /**
     * Register spl_autoload function
     *
     */
    Method [ <user> private method _registerAutoLoad ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 266 - 273
    }

    /**
	 * 设置公共属性值
	 *
	 * @param string $key
	 * @param mixed $value
	 */
    Method [ <user, inherits Fynd_PublicPropertyClass> public method __set ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\PublicPropertyClass.php 12 - 28

      - Parameters [2] {
        Parameter #0 [ <required> $key ]
        Parameter #1 [ <required> $value ]
      }
    }

    /**
	 * 获取公共属性值
	 *
	 * @param string $key
	 * @return mixed
	 */
    Method [ <user, inherits Fynd_PublicPropertyClass> public method __get ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\PublicPropertyClass.php 35 - 60

      - Parameters [1] {
        Parameter #0 [ <required> $key ]
      }
    }

    /**
	 * 获取类型
	 *
	 * @return ReflectionObject
	 */
    Method [ <user, inherits Fynd_PublicPropertyClass> public method getType ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\PublicPropertyClass.php 66 - 70
    }
  }
}
	Application started
INFO	2008-11-04 15:11:30	/**
 * This is global object of whole application,
 * it dispatch request,hold global variables.
 * it will be only single instance of lifetime.
 *
 */
Object of class [ <user> class Fynd_Application extends Fynd_PublicPropertyClass ] {
  @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 14-274

  - Constants [0] {
  }

  - Static properties [2] {
    Property [ private static $_sessionStarted ]
    Property [ private static $_instance ]
  }

  - Static methods [9] {
    /**
     * single instance factory
     * @return Fynd_Application
     */
    Method [ <user> static public method getInstance ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 71 - 79
    }

    /**
     * Get path of application's controllers.
     *
     * @return string
     */
    Method [ <user> static public method getCtrlPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 85 - 88
    }

    /**
     * Get path of application's models.
     *
     * @return string
     */
    Method [ <user> static public method getModelPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 94 - 97
    }

    /**
     * Get path of application's views.
     *
     * @return string
     */
    Method [ <user> static public method getViewPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 103 - 106
    }

    /**
     * Get path of application's configures.
     *
     * @return string
     */
    Method [ <user> static public method getConfigPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 112 - 115
    }

    Method [ <user> static public method startSession ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 182 - 189
    }

    /**
     * Get the identity which identify whether session was started or not
     *
     * @return bool
     */
    Method [ <user> static public method getIsSessionStarted ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 195 - 198
    }

    /**
     * get a logger, which name is specifid by parameter $name,
     * this method will read LogConfig.xml by default to determine the log file path.
     *
     * @param string $name
     * @return Fynd_Log
     */
    Method [ <user> static public method getLogger ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 206 - 214

      - Parameters [1] {
        Parameter #0 [ <required> $name ]
      }
    }

    Method [ <user> static public method autoload ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 258 - 261

      - Parameters [1] {
        Parameter #0 [ <required> $class ]
      }
    }
  }

  - Properties [6] {
    Property [ <default> protected $_ctrlPath ]
    Property [ <default> protected $_viewPath ]
    Property [ <default> protected $_modelPath ]
    Property [ <default> protected $_configPath ]
    Property [ <default> protected $_workPath ]
    Property [ <default> protected $_log ]
  }

  - Dynamic properties [0] {
  }

  - Methods [10] {
    Method [ <user, ctor> private method __construct ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 116 - 117
    }

    /**
     * Get directory which application work in,end with '/'
     *
     * @return string
     */
    Method [ <user> public method getAppWorkPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 123 - 130
    }

    /**
     * Initialize application's execution environment,
     * read global configures etc.
     *
     */
    Method [ <user> public method init ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 136 - 154
    }

    /**
     * Go go go!
     * read request infomation,choose a proccessor to handle this request
     * and output result.
     *
     */
    Method [ <user> public method run ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 161 - 173
    }

    Method [ <user> private method _stop ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 174 - 181
    }

    /**
     * Load class defintion file from $class parameter
     *
     * @param string $class
     */
    Method [ <user> public method loadClass ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 220 - 257

      - Parameters [1] {
        Parameter #0 [ <required> $class ]
      }
    }

    /**
     * Register spl_autoload function
     *
     */
    Method [ <user> private method _registerAutoLoad ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 266 - 273
    }

    /**
	 * 设置公共属性值
	 *
	 * @param string $key
	 * @param mixed $value
	 */
    Method [ <user, inherits Fynd_PublicPropertyClass> public method __set ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\PublicPropertyClass.php 12 - 28

      - Parameters [2] {
        Parameter #0 [ <required> $key ]
        Parameter #1 [ <required> $value ]
      }
    }

    /**
	 * 获取公共属性值
	 *
	 * @param string $key
	 * @return mixed
	 */
    Method [ <user, inherits Fynd_PublicPropertyClass> public method __get ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\PublicPropertyClass.php 35 - 60

      - Parameters [1] {
        Parameter #0 [ <required> $key ]
      }
    }

    /**
	 * 获取类型
	 *
	 * @return ReflectionObject
	 */
    Method [ <user, inherits Fynd_PublicPropertyClass> public method getType ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\PublicPropertyClass.php 66 - 70
    }
  }
}
	Application started
INFO	2008-11-04 15:11:30	/**
 * This is global object of whole application,
 * it dispatch request,hold global variables.
 * it will be only single instance of lifetime.
 *
 */
Object of class [ <user> class Fynd_Application extends Fynd_PublicPropertyClass ] {
  @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 14-274

  - Constants [0] {
  }

  - Static properties [2] {
    Property [ private static $_sessionStarted ]
    Property [ private static $_instance ]
  }

  - Static methods [9] {
    /**
     * single instance factory
     * @return Fynd_Application
     */
    Method [ <user> static public method getInstance ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 71 - 79
    }

    /**
     * Get path of application's controllers.
     *
     * @return string
     */
    Method [ <user> static public method getCtrlPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 85 - 88
    }

    /**
     * Get path of application's models.
     *
     * @return string
     */
    Method [ <user> static public method getModelPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 94 - 97
    }

    /**
     * Get path of application's views.
     *
     * @return string
     */
    Method [ <user> static public method getViewPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 103 - 106
    }

    /**
     * Get path of application's configures.
     *
     * @return string
     */
    Method [ <user> static public method getConfigPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 112 - 115
    }

    Method [ <user> static public method startSession ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 182 - 189
    }

    /**
     * Get the identity which identify whether session was started or not
     *
     * @return bool
     */
    Method [ <user> static public method getIsSessionStarted ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 195 - 198
    }

    /**
     * get a logger, which name is specifid by parameter $name,
     * this method will read LogConfig.xml by default to determine the log file path.
     *
     * @param string $name
     * @return Fynd_Log
     */
    Method [ <user> static public method getLogger ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 206 - 214

      - Parameters [1] {
        Parameter #0 [ <required> $name ]
      }
    }

    Method [ <user> static public method autoload ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 258 - 261

      - Parameters [1] {
        Parameter #0 [ <required> $class ]
      }
    }
  }

  - Properties [6] {
    Property [ <default> protected $_ctrlPath ]
    Property [ <default> protected $_viewPath ]
    Property [ <default> protected $_modelPath ]
    Property [ <default> protected $_configPath ]
    Property [ <default> protected $_workPath ]
    Property [ <default> protected $_log ]
  }

  - Dynamic properties [0] {
  }

  - Methods [10] {
    Method [ <user, ctor> private method __construct ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 116 - 117
    }

    /**
     * Get directory which application work in,end with '/'
     *
     * @return string
     */
    Method [ <user> public method getAppWorkPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 123 - 130
    }

    /**
     * Initialize application's execution environment,
     * read global configures etc.
     *
     */
    Method [ <user> public method init ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 136 - 154
    }

    /**
     * Go go go!
     * read request infomation,choose a proccessor to handle this request
     * and output result.
     *
     */
    Method [ <user> public method run ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 161 - 173
    }

    Method [ <user> private method _stop ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 174 - 181
    }

    /**
     * Load class defintion file from $class parameter
     *
     * @param string $class
     */
    Method [ <user> public method loadClass ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 220 - 257

      - Parameters [1] {
        Parameter #0 [ <required> $class ]
      }
    }

    /**
     * Register spl_autoload function
     *
     */
    Method [ <user> private method _registerAutoLoad ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 266 - 273
    }

    /**
	 * 设置公共属性值
	 *
	 * @param string $key
	 * @param mixed $value
	 */
    Method [ <user, inherits Fynd_PublicPropertyClass> public method __set ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\PublicPropertyClass.php 12 - 28

      - Parameters [2] {
        Parameter #0 [ <required> $key ]
        Parameter #1 [ <required> $value ]
      }
    }

    /**
	 * 获取公共属性值
	 *
	 * @param string $key
	 * @return mixed
	 */
    Method [ <user, inherits Fynd_PublicPropertyClass> public method __get ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\PublicPropertyClass.php 35 - 60

      - Parameters [1] {
        Parameter #0 [ <required> $key ]
      }
    }

    /**
	 * 获取类型
	 *
	 * @return ReflectionObject
	 */
    Method [ <user, inherits Fynd_PublicPropertyClass> public method getType ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\PublicPropertyClass.php 66 - 70
    }
  }
}
	Application started
INFO	2008-11-04 15:11:30	/**
 * This is global object of whole application,
 * it dispatch request,hold global variables.
 * it will be only single instance of lifetime.
 *
 */
Object of class [ <user> class Fynd_Application extends Fynd_PublicPropertyClass ] {
  @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 14-274

  - Constants [0] {
  }

  - Static properties [2] {
    Property [ private static $_sessionStarted ]
    Property [ private static $_instance ]
  }

  - Static methods [9] {
    /**
     * single instance factory
     * @return Fynd_Application
     */
    Method [ <user> static public method getInstance ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 71 - 79
    }

    /**
     * Get path of application's controllers.
     *
     * @return string
     */
    Method [ <user> static public method getCtrlPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 85 - 88
    }

    /**
     * Get path of application's models.
     *
     * @return string
     */
    Method [ <user> static public method getModelPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 94 - 97
    }

    /**
     * Get path of application's views.
     *
     * @return string
     */
    Method [ <user> static public method getViewPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 103 - 106
    }

    /**
     * Get path of application's configures.
     *
     * @return string
     */
    Method [ <user> static public method getConfigPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 112 - 115
    }

    Method [ <user> static public method startSession ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 182 - 189
    }

    /**
     * Get the identity which identify whether session was started or not
     *
     * @return bool
     */
    Method [ <user> static public method getIsSessionStarted ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 195 - 198
    }

    /**
     * get a logger, which name is specifid by parameter $name,
     * this method will read LogConfig.xml by default to determine the log file path.
     *
     * @param string $name
     * @return Fynd_Log
     */
    Method [ <user> static public method getLogger ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 206 - 214

      - Parameters [1] {
        Parameter #0 [ <required> $name ]
      }
    }

    Method [ <user> static public method autoload ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 258 - 261

      - Parameters [1] {
        Parameter #0 [ <required> $class ]
      }
    }
  }

  - Properties [6] {
    Property [ <default> protected $_ctrlPath ]
    Property [ <default> protected $_viewPath ]
    Property [ <default> protected $_modelPath ]
    Property [ <default> protected $_configPath ]
    Property [ <default> protected $_workPath ]
    Property [ <default> protected $_log ]
  }

  - Dynamic properties [0] {
  }

  - Methods [10] {
    Method [ <user, ctor> private method __construct ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 116 - 117
    }

    /**
     * Get directory which application work in,end with '/'
     *
     * @return string
     */
    Method [ <user> public method getAppWorkPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 123 - 130
    }

    /**
     * Initialize application's execution environment,
     * read global configures etc.
     *
     */
    Method [ <user> public method init ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 136 - 154
    }

    /**
     * Go go go!
     * read request infomation,choose a proccessor to handle this request
     * and output result.
     *
     */
    Method [ <user> public method run ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 161 - 173
    }

    Method [ <user> private method _stop ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 174 - 181
    }

    /**
     * Load class defintion file from $class parameter
     *
     * @param string $class
     */
    Method [ <user> public method loadClass ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 220 - 257

      - Parameters [1] {
        Parameter #0 [ <required> $class ]
      }
    }

    /**
     * Register spl_autoload function
     *
     */
    Method [ <user> private method _registerAutoLoad ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 266 - 273
    }

    /**
	 * 设置公共属性值
	 *
	 * @param string $key
	 * @param mixed $value
	 */
    Method [ <user, inherits Fynd_PublicPropertyClass> public method __set ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\PublicPropertyClass.php 12 - 28

      - Parameters [2] {
        Parameter #0 [ <required> $key ]
        Parameter #1 [ <required> $value ]
      }
    }

    /**
	 * 获取公共属性值
	 *
	 * @param string $key
	 * @return mixed
	 */
    Method [ <user, inherits Fynd_PublicPropertyClass> public method __get ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\PublicPropertyClass.php 35 - 60

      - Parameters [1] {
        Parameter #0 [ <required> $key ]
      }
    }

    /**
	 * 获取类型
	 *
	 * @return ReflectionObject
	 */
    Method [ <user, inherits Fynd_PublicPropertyClass> public method getType ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\PublicPropertyClass.php 66 - 70
    }
  }
}
	Application started
INFO	2008-11-04 15:11:30	/**
 * This is global object of whole application,
 * it dispatch request,hold global variables.
 * it will be only single instance of lifetime.
 *
 */
Object of class [ <user> class Fynd_Application extends Fynd_PublicPropertyClass ] {
  @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 14-274

  - Constants [0] {
  }

  - Static properties [2] {
    Property [ private static $_sessionStarted ]
    Property [ private static $_instance ]
  }

  - Static methods [9] {
    /**
     * single instance factory
     * @return Fynd_Application
     */
    Method [ <user> static public method getInstance ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 71 - 79
    }

    /**
     * Get path of application's controllers.
     *
     * @return string
     */
    Method [ <user> static public method getCtrlPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 85 - 88
    }

    /**
     * Get path of application's models.
     *
     * @return string
     */
    Method [ <user> static public method getModelPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 94 - 97
    }

    /**
     * Get path of application's views.
     *
     * @return string
     */
    Method [ <user> static public method getViewPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 103 - 106
    }

    /**
     * Get path of application's configures.
     *
     * @return string
     */
    Method [ <user> static public method getConfigPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 112 - 115
    }

    Method [ <user> static public method startSession ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 182 - 189
    }

    /**
     * Get the identity which identify whether session was started or not
     *
     * @return bool
     */
    Method [ <user> static public method getIsSessionStarted ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 195 - 198
    }

    /**
     * get a logger, which name is specifid by parameter $name,
     * this method will read LogConfig.xml by default to determine the log file path.
     *
     * @param string $name
     * @return Fynd_Log
     */
    Method [ <user> static public method getLogger ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 206 - 214

      - Parameters [1] {
        Parameter #0 [ <required> $name ]
      }
    }

    Method [ <user> static public method autoload ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 258 - 261

      - Parameters [1] {
        Parameter #0 [ <required> $class ]
      }
    }
  }

  - Properties [6] {
    Property [ <default> protected $_ctrlPath ]
    Property [ <default> protected $_viewPath ]
    Property [ <default> protected $_modelPath ]
    Property [ <default> protected $_configPath ]
    Property [ <default> protected $_workPath ]
    Property [ <default> protected $_log ]
  }

  - Dynamic properties [0] {
  }

  - Methods [10] {
    Method [ <user, ctor> private method __construct ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 116 - 117
    }

    /**
     * Get directory which application work in,end with '/'
     *
     * @return string
     */
    Method [ <user> public method getAppWorkPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 123 - 130
    }

    /**
     * Initialize application's execution environment,
     * read global configures etc.
     *
     */
    Method [ <user> public method init ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 136 - 154
    }

    /**
     * Go go go!
     * read request infomation,choose a proccessor to handle this request
     * and output result.
     *
     */
    Method [ <user> public method run ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 161 - 173
    }

    Method [ <user> private method _stop ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 174 - 181
    }

    /**
     * Load class defintion file from $class parameter
     *
     * @param string $class
     */
    Method [ <user> public method loadClass ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 220 - 257

      - Parameters [1] {
        Parameter #0 [ <required> $class ]
      }
    }

    /**
     * Register spl_autoload function
     *
     */
    Method [ <user> private method _registerAutoLoad ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 266 - 273
    }

    /**
	 * 设置公共属性值
	 *
	 * @param string $key
	 * @param mixed $value
	 */
    Method [ <user, inherits Fynd_PublicPropertyClass> public method __set ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\PublicPropertyClass.php 12 - 28

      - Parameters [2] {
        Parameter #0 [ <required> $key ]
        Parameter #1 [ <required> $value ]
      }
    }

    /**
	 * 获取公共属性值
	 *
	 * @param string $key
	 * @return mixed
	 */
    Method [ <user, inherits Fynd_PublicPropertyClass> public method __get ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\PublicPropertyClass.php 35 - 60

      - Parameters [1] {
        Parameter #0 [ <required> $key ]
      }
    }

    /**
	 * 获取类型
	 *
	 * @return ReflectionObject
	 */
    Method [ <user, inherits Fynd_PublicPropertyClass> public method getType ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\PublicPropertyClass.php 66 - 70
    }
  }
}
	Application started
INFO	2008-11-04 15:11:30	/**
 * This is global object of whole application,
 * it dispatch request,hold global variables.
 * it will be only single instance of lifetime.
 *
 */
Object of class [ <user> class Fynd_Application extends Fynd_PublicPropertyClass ] {
  @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 14-274

  - Constants [0] {
  }

  - Static properties [2] {
    Property [ private static $_sessionStarted ]
    Property [ private static $_instance ]
  }

  - Static methods [9] {
    /**
     * single instance factory
     * @return Fynd_Application
     */
    Method [ <user> static public method getInstance ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 71 - 79
    }

    /**
     * Get path of application's controllers.
     *
     * @return string
     */
    Method [ <user> static public method getCtrlPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 85 - 88
    }

    /**
     * Get path of application's models.
     *
     * @return string
     */
    Method [ <user> static public method getModelPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 94 - 97
    }

    /**
     * Get path of application's views.
     *
     * @return string
     */
    Method [ <user> static public method getViewPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 103 - 106
    }

    /**
     * Get path of application's configures.
     *
     * @return string
     */
    Method [ <user> static public method getConfigPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 112 - 115
    }

    Method [ <user> static public method startSession ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 182 - 189
    }

    /**
     * Get the identity which identify whether session was started or not
     *
     * @return bool
     */
    Method [ <user> static public method getIsSessionStarted ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 195 - 198
    }

    /**
     * get a logger, which name is specifid by parameter $name,
     * this method will read LogConfig.xml by default to determine the log file path.
     *
     * @param string $name
     * @return Fynd_Log
     */
    Method [ <user> static public method getLogger ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 206 - 214

      - Parameters [1] {
        Parameter #0 [ <required> $name ]
      }
    }

    Method [ <user> static public method autoload ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 258 - 261

      - Parameters [1] {
        Parameter #0 [ <required> $class ]
      }
    }
  }

  - Properties [6] {
    Property [ <default> protected $_ctrlPath ]
    Property [ <default> protected $_viewPath ]
    Property [ <default> protected $_modelPath ]
    Property [ <default> protected $_configPath ]
    Property [ <default> protected $_workPath ]
    Property [ <default> protected $_log ]
  }

  - Dynamic properties [0] {
  }

  - Methods [10] {
    Method [ <user, ctor> private method __construct ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 116 - 117
    }

    /**
     * Get directory which application work in,end with '/'
     *
     * @return string
     */
    Method [ <user> public method getAppWorkPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 123 - 130
    }

    /**
     * Initialize application's execution environment,
     * read global configures etc.
     *
     */
    Method [ <user> public method init ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 136 - 154
    }

    /**
     * Go go go!
     * read request infomation,choose a proccessor to handle this request
     * and output result.
     *
     */
    Method [ <user> public method run ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 161 - 173
    }

    Method [ <user> private method _stop ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 174 - 181
    }

    /**
     * Load class defintion file from $class parameter
     *
     * @param string $class
     */
    Method [ <user> public method loadClass ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 220 - 257

      - Parameters [1] {
        Parameter #0 [ <required> $class ]
      }
    }

    /**
     * Register spl_autoload function
     *
     */
    Method [ <user> private method _registerAutoLoad ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 266 - 273
    }

    /**
	 * 设置公共属性值
	 *
	 * @param string $key
	 * @param mixed $value
	 */
    Method [ <user, inherits Fynd_PublicPropertyClass> public method __set ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\PublicPropertyClass.php 12 - 28

      - Parameters [2] {
        Parameter #0 [ <required> $key ]
        Parameter #1 [ <required> $value ]
      }
    }

    /**
	 * 获取公共属性值
	 *
	 * @param string $key
	 * @return mixed
	 */
    Method [ <user, inherits Fynd_PublicPropertyClass> public method __get ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\PublicPropertyClass.php 35 - 60

      - Parameters [1] {
        Parameter #0 [ <required> $key ]
      }
    }

    /**
	 * 获取类型
	 *
	 * @return ReflectionObject
	 */
    Method [ <user, inherits Fynd_PublicPropertyClass> public method getType ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\PublicPropertyClass.php 66 - 70
    }
  }
}
	Application started
INFO	2008-11-04 15:11:31	/**
 * This is global object of whole application,
 * it dispatch request,hold global variables.
 * it will be only single instance of lifetime.
 *
 */
Object of class [ <user> class Fynd_Application extends Fynd_PublicPropertyClass ] {
  @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 14-274

  - Constants [0] {
  }

  - Static properties [2] {
    Property [ private static $_sessionStarted ]
    Property [ private static $_instance ]
  }

  - Static methods [9] {
    /**
     * single instance factory
     * @return Fynd_Application
     */
    Method [ <user> static public method getInstance ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 71 - 79
    }

    /**
     * Get path of application's controllers.
     *
     * @return string
     */
    Method [ <user> static public method getCtrlPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 85 - 88
    }

    /**
     * Get path of application's models.
     *
     * @return string
     */
    Method [ <user> static public method getModelPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 94 - 97
    }

    /**
     * Get path of application's views.
     *
     * @return string
     */
    Method [ <user> static public method getViewPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 103 - 106
    }

    /**
     * Get path of application's configures.
     *
     * @return string
     */
    Method [ <user> static public method getConfigPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 112 - 115
    }

    Method [ <user> static public method startSession ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 182 - 189
    }

    /**
     * Get the identity which identify whether session was started or not
     *
     * @return bool
     */
    Method [ <user> static public method getIsSessionStarted ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 195 - 198
    }

    /**
     * get a logger, which name is specifid by parameter $name,
     * this method will read LogConfig.xml by default to determine the log file path.
     *
     * @param string $name
     * @return Fynd_Log
     */
    Method [ <user> static public method getLogger ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 206 - 214

      - Parameters [1] {
        Parameter #0 [ <required> $name ]
      }
    }

    Method [ <user> static public method autoload ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 258 - 261

      - Parameters [1] {
        Parameter #0 [ <required> $class ]
      }
    }
  }

  - Properties [6] {
    Property [ <default> protected $_ctrlPath ]
    Property [ <default> protected $_viewPath ]
    Property [ <default> protected $_modelPath ]
    Property [ <default> protected $_configPath ]
    Property [ <default> protected $_workPath ]
    Property [ <default> protected $_log ]
  }

  - Dynamic properties [0] {
  }

  - Methods [10] {
    Method [ <user, ctor> private method __construct ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 116 - 117
    }

    /**
     * Get directory which application work in,end with '/'
     *
     * @return string
     */
    Method [ <user> public method getAppWorkPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 123 - 130
    }

    /**
     * Initialize application's execution environment,
     * read global configures etc.
     *
     */
    Method [ <user> public method init ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 136 - 154
    }

    /**
     * Go go go!
     * read request infomation,choose a proccessor to handle this request
     * and output result.
     *
     */
    Method [ <user> public method run ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 161 - 173
    }

    Method [ <user> private method _stop ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 174 - 181
    }

    /**
     * Load class defintion file from $class parameter
     *
     * @param string $class
     */
    Method [ <user> public method loadClass ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 220 - 257

      - Parameters [1] {
        Parameter #0 [ <required> $class ]
      }
    }

    /**
     * Register spl_autoload function
     *
     */
    Method [ <user> private method _registerAutoLoad ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 266 - 273
    }

    /**
	 * 设置公共属性值
	 *
	 * @param string $key
	 * @param mixed $value
	 */
    Method [ <user, inherits Fynd_PublicPropertyClass> public method __set ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\PublicPropertyClass.php 12 - 28

      - Parameters [2] {
        Parameter #0 [ <required> $key ]
        Parameter #1 [ <required> $value ]
      }
    }

    /**
	 * 获取公共属性值
	 *
	 * @param string $key
	 * @return mixed
	 */
    Method [ <user, inherits Fynd_PublicPropertyClass> public method __get ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\PublicPropertyClass.php 35 - 60

      - Parameters [1] {
        Parameter #0 [ <required> $key ]
      }
    }

    /**
	 * 获取类型
	 *
	 * @return ReflectionObject
	 */
    Method [ <user, inherits Fynd_PublicPropertyClass> public method getType ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\PublicPropertyClass.php 66 - 70
    }
  }
}
	Script end!!!
INFO	2008-11-04 15:11:31	/**
 * This is global object of whole application,
 * it dispatch request,hold global variables.
 * it will be only single instance of lifetime.
 *
 */
Object of class [ <user> class Fynd_Application extends Fynd_PublicPropertyClass ] {
  @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 14-274

  - Constants [0] {
  }

  - Static properties [2] {
    Property [ private static $_sessionStarted ]
    Property [ private static $_instance ]
  }

  - Static methods [9] {
    /**
     * single instance factory
     * @return Fynd_Application
     */
    Method [ <user> static public method getInstance ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 71 - 79
    }

    /**
     * Get path of application's controllers.
     *
     * @return string
     */
    Method [ <user> static public method getCtrlPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 85 - 88
    }

    /**
     * Get path of application's models.
     *
     * @return string
     */
    Method [ <user> static public method getModelPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 94 - 97
    }

    /**
     * Get path of application's views.
     *
     * @return string
     */
    Method [ <user> static public method getViewPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 103 - 106
    }

    /**
     * Get path of application's configures.
     *
     * @return string
     */
    Method [ <user> static public method getConfigPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 112 - 115
    }

    Method [ <user> static public method startSession ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 182 - 189
    }

    /**
     * Get the identity which identify whether session was started or not
     *
     * @return bool
     */
    Method [ <user> static public method getIsSessionStarted ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 195 - 198
    }

    /**
     * get a logger, which name is specifid by parameter $name,
     * this method will read LogConfig.xml by default to determine the log file path.
     *
     * @param string $name
     * @return Fynd_Log
     */
    Method [ <user> static public method getLogger ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 206 - 214

      - Parameters [1] {
        Parameter #0 [ <required> $name ]
      }
    }

    Method [ <user> static public method autoload ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 258 - 261

      - Parameters [1] {
        Parameter #0 [ <required> $class ]
      }
    }
  }

  - Properties [6] {
    Property [ <default> protected $_ctrlPath ]
    Property [ <default> protected $_viewPath ]
    Property [ <default> protected $_modelPath ]
    Property [ <default> protected $_configPath ]
    Property [ <default> protected $_workPath ]
    Property [ <default> protected $_log ]
  }

  - Dynamic properties [0] {
  }

  - Methods [10] {
    Method [ <user, ctor> private method __construct ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 116 - 117
    }

    /**
     * Get directory which application work in,end with '/'
     *
     * @return string
     */
    Method [ <user> public method getAppWorkPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 123 - 130
    }

    /**
     * Initialize application's execution environment,
     * read global configures etc.
     *
     */
    Method [ <user> public method init ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 136 - 154
    }

    /**
     * Go go go!
     * read request infomation,choose a proccessor to handle this request
     * and output result.
     *
     */
    Method [ <user> public method run ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 161 - 173
    }

    Method [ <user> private method _stop ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 174 - 181
    }

    /**
     * Load class defintion file from $class parameter
     *
     * @param string $class
     */
    Method [ <user> public method loadClass ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 220 - 257

      - Parameters [1] {
        Parameter #0 [ <required> $class ]
      }
    }

    /**
     * Register spl_autoload function
     *
     */
    Method [ <user> private method _registerAutoLoad ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 266 - 273
    }

    /**
	 * 设置公共属性值
	 *
	 * @param string $key
	 * @param mixed $value
	 */
    Method [ <user, inherits Fynd_PublicPropertyClass> public method __set ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\PublicPropertyClass.php 12 - 28

      - Parameters [2] {
        Parameter #0 [ <required> $key ]
        Parameter #1 [ <required> $value ]
      }
    }

    /**
	 * 获取公共属性值
	 *
	 * @param string $key
	 * @return mixed
	 */
    Method [ <user, inherits Fynd_PublicPropertyClass> public method __get ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\PublicPropertyClass.php 35 - 60

      - Parameters [1] {
        Parameter #0 [ <required> $key ]
      }
    }

    /**
	 * 获取类型
	 *
	 * @return ReflectionObject
	 */
    Method [ <user, inherits Fynd_PublicPropertyClass> public method getType ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\PublicPropertyClass.php 66 - 70
    }
  }
}
	Application started
INFO	2008-11-04 15:11:11	/**
 * This is global object of whole application,
 * it dispatch request,hold global variables.
 * it will be only single instance of lifetime.
 *
 */
Object of class [ <user> class Fynd_Application extends Fynd_PublicPropertyClass ] {
  @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 14-274

  - Constants [0] {
  }

  - Static properties [2] {
    Property [ private static $_sessionStarted ]
    Property [ private static $_instance ]
  }

  - Static methods [9] {
    /**
     * single instance factory
     * @return Fynd_Application
     */
    Method [ <user> static public method getInstance ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 71 - 79
    }

    /**
     * Get path of application's controllers.
     *
     * @return string
     */
    Method [ <user> static public method getCtrlPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 85 - 88
    }

    /**
     * Get path of application's models.
     *
     * @return string
     */
    Method [ <user> static public method getModelPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 94 - 97
    }

    /**
     * Get path of application's views.
     *
     * @return string
     */
    Method [ <user> static public method getViewPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 103 - 106
    }

    /**
     * Get path of application's configures.
     *
     * @return string
     */
    Method [ <user> static public method getConfigPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 112 - 115
    }

    Method [ <user> static public method startSession ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 182 - 189
    }

    /**
     * Get the identity which identify whether session was started or not
     *
     * @return bool
     */
    Method [ <user> static public method getIsSessionStarted ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 195 - 198
    }

    /**
     * get a logger, which name is specifid by parameter $name,
     * this method will read LogConfig.xml by default to determine the log file path.
     *
     * @param string $name
     * @return Fynd_Log
     */
    Method [ <user> static public method getLogger ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 206 - 214

      - Parameters [1] {
        Parameter #0 [ <required> $name ]
      }
    }

    Method [ <user> static public method autoload ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 258 - 261

      - Parameters [1] {
        Parameter #0 [ <required> $class ]
      }
    }
  }

  - Properties [6] {
    Property [ <default> protected $_ctrlPath ]
    Property [ <default> protected $_viewPath ]
    Property [ <default> protected $_modelPath ]
    Property [ <default> protected $_configPath ]
    Property [ <default> protected $_workPath ]
    Property [ <default> protected $_log ]
  }

  - Dynamic properties [0] {
  }

  - Methods [10] {
    Method [ <user, ctor> private method __construct ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 116 - 117
    }

    /**
     * Get directory which application work in,end with '/'
     *
     * @return string
     */
    Method [ <user> public method getAppWorkPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 123 - 130
    }

    /**
     * Initialize application's execution environment,
     * read global configures etc.
     *
     */
    Method [ <user> public method init ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 136 - 154
    }

    /**
     * Go go go!
     * read request infomation,choose a proccessor to handle this request
     * and output result.
     *
     */
    Method [ <user> public method run ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 161 - 173
    }

    Method [ <user> private method _stop ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 174 - 181
    }

    /**
     * Load class defintion file from $class parameter
     *
     * @param string $class
     */
    Method [ <user> public method loadClass ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 220 - 257

      - Parameters [1] {
        Parameter #0 [ <required> $class ]
      }
    }

    /**
     * Register spl_autoload function
     *
     */
    Method [ <user> private method _registerAutoLoad ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 266 - 273
    }

    /**
	 * 设置公共属性值
	 *
	 * @param string $key
	 * @param mixed $value
	 */
    Method [ <user, inherits Fynd_PublicPropertyClass> public method __set ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\PublicPropertyClass.php 12 - 28

      - Parameters [2] {
        Parameter #0 [ <required> $key ]
        Parameter #1 [ <required> $value ]
      }
    }

    /**
	 * 获取公共属性值
	 *
	 * @param string $key
	 * @return mixed
	 */
    Method [ <user, inherits Fynd_PublicPropertyClass> public method __get ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\PublicPropertyClass.php 35 - 60

      - Parameters [1] {
        Parameter #0 [ <required> $key ]
      }
    }

    /**
	 * 获取类型
	 *
	 * @return ReflectionObject
	 */
    Method [ <user, inherits Fynd_PublicPropertyClass> public method getType ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\PublicPropertyClass.php 66 - 70
    }
  }
}
	Application started
INFO	2008-11-04 15:11:11	/**
 * This is global object of whole application,
 * it dispatch request,hold global variables.
 * it will be only single instance of lifetime.
 *
 */
Object of class [ <user> class Fynd_Application extends Fynd_PublicPropertyClass ] {
  @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 14-274

  - Constants [0] {
  }

  - Static properties [2] {
    Property [ private static $_sessionStarted ]
    Property [ private static $_instance ]
  }

  - Static methods [9] {
    /**
     * single instance factory
     * @return Fynd_Application
     */
    Method [ <user> static public method getInstance ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 71 - 79
    }

    /**
     * Get path of application's controllers.
     *
     * @return string
     */
    Method [ <user> static public method getCtrlPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 85 - 88
    }

    /**
     * Get path of application's models.
     *
     * @return string
     */
    Method [ <user> static public method getModelPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 94 - 97
    }

    /**
     * Get path of application's views.
     *
     * @return string
     */
    Method [ <user> static public method getViewPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 103 - 106
    }

    /**
     * Get path of application's configures.
     *
     * @return string
     */
    Method [ <user> static public method getConfigPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 112 - 115
    }

    Method [ <user> static public method startSession ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 182 - 189
    }

    /**
     * Get the identity which identify whether session was started or not
     *
     * @return bool
     */
    Method [ <user> static public method getIsSessionStarted ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 195 - 198
    }

    /**
     * get a logger, which name is specifid by parameter $name,
     * this method will read LogConfig.xml by default to determine the log file path.
     *
     * @param string $name
     * @return Fynd_Log
     */
    Method [ <user> static public method getLogger ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 206 - 214

      - Parameters [1] {
        Parameter #0 [ <required> $name ]
      }
    }

    Method [ <user> static public method autoload ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 258 - 261

      - Parameters [1] {
        Parameter #0 [ <required> $class ]
      }
    }
  }

  - Properties [6] {
    Property [ <default> protected $_ctrlPath ]
    Property [ <default> protected $_viewPath ]
    Property [ <default> protected $_modelPath ]
    Property [ <default> protected $_configPath ]
    Property [ <default> protected $_workPath ]
    Property [ <default> protected $_log ]
  }

  - Dynamic properties [0] {
  }

  - Methods [10] {
    Method [ <user, ctor> private method __construct ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 116 - 117
    }

    /**
     * Get directory which application work in,end with '/'
     *
     * @return string
     */
    Method [ <user> public method getAppWorkPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 123 - 130
    }

    /**
     * Initialize application's execution environment,
     * read global configures etc.
     *
     */
    Method [ <user> public method init ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 136 - 154
    }

    /**
     * Go go go!
     * read request infomation,choose a proccessor to handle this request
     * and output result.
     *
     */
    Method [ <user> public method run ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 161 - 173
    }

    Method [ <user> private method _stop ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 174 - 181
    }

    /**
     * Load class defintion file from $class parameter
     *
     * @param string $class
     */
    Method [ <user> public method loadClass ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 220 - 257

      - Parameters [1] {
        Parameter #0 [ <required> $class ]
      }
    }

    /**
     * Register spl_autoload function
     *
     */
    Method [ <user> private method _registerAutoLoad ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 266 - 273
    }

    /**
	 * 设置公共属性值
	 *
	 * @param string $key
	 * @param mixed $value
	 */
    Method [ <user, inherits Fynd_PublicPropertyClass> public method __set ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\PublicPropertyClass.php 12 - 28

      - Parameters [2] {
        Parameter #0 [ <required> $key ]
        Parameter #1 [ <required> $value ]
      }
    }

    /**
	 * 获取公共属性值
	 *
	 * @param string $key
	 * @return mixed
	 */
    Method [ <user, inherits Fynd_PublicPropertyClass> public method __get ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\PublicPropertyClass.php 35 - 60

      - Parameters [1] {
        Parameter #0 [ <required> $key ]
      }
    }

    /**
	 * 获取类型
	 *
	 * @return ReflectionObject
	 */
    Method [ <user, inherits Fynd_PublicPropertyClass> public method getType ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\PublicPropertyClass.php 66 - 70
    }
  }
}
	Application started
INFO	2008-11-04 15:11:11	/**
 * This is global object of whole application,
 * it dispatch request,hold global variables.
 * it will be only single instance of lifetime.
 *
 */
Object of class [ <user> class Fynd_Application extends Fynd_PublicPropertyClass ] {
  @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 14-274

  - Constants [0] {
  }

  - Static properties [2] {
    Property [ private static $_sessionStarted ]
    Property [ private static $_instance ]
  }

  - Static methods [9] {
    /**
     * single instance factory
     * @return Fynd_Application
     */
    Method [ <user> static public method getInstance ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 71 - 79
    }

    /**
     * Get path of application's controllers.
     *
     * @return string
     */
    Method [ <user> static public method getCtrlPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 85 - 88
    }

    /**
     * Get path of application's models.
     *
     * @return string
     */
    Method [ <user> static public method getModelPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 94 - 97
    }

    /**
     * Get path of application's views.
     *
     * @return string
     */
    Method [ <user> static public method getViewPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 103 - 106
    }

    /**
     * Get path of application's configures.
     *
     * @return string
     */
    Method [ <user> static public method getConfigPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 112 - 115
    }

    Method [ <user> static public method startSession ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 182 - 189
    }

    /**
     * Get the identity which identify whether session was started or not
     *
     * @return bool
     */
    Method [ <user> static public method getIsSessionStarted ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 195 - 198
    }

    /**
     * get a logger, which name is specifid by parameter $name,
     * this method will read LogConfig.xml by default to determine the log file path.
     *
     * @param string $name
     * @return Fynd_Log
     */
    Method [ <user> static public method getLogger ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 206 - 214

      - Parameters [1] {
        Parameter #0 [ <required> $name ]
      }
    }

    Method [ <user> static public method autoload ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 258 - 261

      - Parameters [1] {
        Parameter #0 [ <required> $class ]
      }
    }
  }

  - Properties [6] {
    Property [ <default> protected $_ctrlPath ]
    Property [ <default> protected $_viewPath ]
    Property [ <default> protected $_modelPath ]
    Property [ <default> protected $_configPath ]
    Property [ <default> protected $_workPath ]
    Property [ <default> protected $_log ]
  }

  - Dynamic properties [0] {
  }

  - Methods [10] {
    Method [ <user, ctor> private method __construct ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 116 - 117
    }

    /**
     * Get directory which application work in,end with '/'
     *
     * @return string
     */
    Method [ <user> public method getAppWorkPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 123 - 130
    }

    /**
     * Initialize application's execution environment,
     * read global configures etc.
     *
     */
    Method [ <user> public method init ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 136 - 154
    }

    /**
     * Go go go!
     * read request infomation,choose a proccessor to handle this request
     * and output result.
     *
     */
    Method [ <user> public method run ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 161 - 173
    }

    Method [ <user> private method _stop ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 174 - 181
    }

    /**
     * Load class defintion file from $class parameter
     *
     * @param string $class
     */
    Method [ <user> public method loadClass ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 220 - 257

      - Parameters [1] {
        Parameter #0 [ <required> $class ]
      }
    }

    /**
     * Register spl_autoload function
     *
     */
    Method [ <user> private method _registerAutoLoad ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 266 - 273
    }

    /**
	 * 设置公共属性值
	 *
	 * @param string $key
	 * @param mixed $value
	 */
    Method [ <user, inherits Fynd_PublicPropertyClass> public method __set ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\PublicPropertyClass.php 12 - 28

      - Parameters [2] {
        Parameter #0 [ <required> $key ]
        Parameter #1 [ <required> $value ]
      }
    }

    /**
	 * 获取公共属性值
	 *
	 * @param string $key
	 * @return mixed
	 */
    Method [ <user, inherits Fynd_PublicPropertyClass> public method __get ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\PublicPropertyClass.php 35 - 60

      - Parameters [1] {
        Parameter #0 [ <required> $key ]
      }
    }

    /**
	 * 获取类型
	 *
	 * @return ReflectionObject
	 */
    Method [ <user, inherits Fynd_PublicPropertyClass> public method getType ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\PublicPropertyClass.php 66 - 70
    }
  }
}
	Application started
INFO	2008-11-04 15:11:11	/**
 * This is global object of whole application,
 * it dispatch request,hold global variables.
 * it will be only single instance of lifetime.
 *
 */
Object of class [ <user> class Fynd_Application extends Fynd_PublicPropertyClass ] {
  @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 14-274

  - Constants [0] {
  }

  - Static properties [2] {
    Property [ private static $_sessionStarted ]
    Property [ private static $_instance ]
  }

  - Static methods [9] {
    /**
     * single instance factory
     * @return Fynd_Application
     */
    Method [ <user> static public method getInstance ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 71 - 79
    }

    /**
     * Get path of application's controllers.
     *
     * @return string
     */
    Method [ <user> static public method getCtrlPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 85 - 88
    }

    /**
     * Get path of application's models.
     *
     * @return string
     */
    Method [ <user> static public method getModelPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 94 - 97
    }

    /**
     * Get path of application's views.
     *
     * @return string
     */
    Method [ <user> static public method getViewPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 103 - 106
    }

    /**
     * Get path of application's configures.
     *
     * @return string
     */
    Method [ <user> static public method getConfigPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 112 - 115
    }

    Method [ <user> static public method startSession ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 182 - 189
    }

    /**
     * Get the identity which identify whether session was started or not
     *
     * @return bool
     */
    Method [ <user> static public method getIsSessionStarted ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 195 - 198
    }

    /**
     * get a logger, which name is specifid by parameter $name,
     * this method will read LogConfig.xml by default to determine the log file path.
     *
     * @param string $name
     * @return Fynd_Log
     */
    Method [ <user> static public method getLogger ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 206 - 214

      - Parameters [1] {
        Parameter #0 [ <required> $name ]
      }
    }

    Method [ <user> static public method autoload ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 258 - 261

      - Parameters [1] {
        Parameter #0 [ <required> $class ]
      }
    }
  }

  - Properties [6] {
    Property [ <default> protected $_ctrlPath ]
    Property [ <default> protected $_viewPath ]
    Property [ <default> protected $_modelPath ]
    Property [ <default> protected $_configPath ]
    Property [ <default> protected $_workPath ]
    Property [ <default> protected $_log ]
  }

  - Dynamic properties [0] {
  }

  - Methods [10] {
    Method [ <user, ctor> private method __construct ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 116 - 117
    }

    /**
     * Get directory which application work in,end with '/'
     *
     * @return string
     */
    Method [ <user> public method getAppWorkPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 123 - 130
    }

    /**
     * Initialize application's execution environment,
     * read global configures etc.
     *
     */
    Method [ <user> public method init ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 136 - 154
    }

    /**
     * Go go go!
     * read request infomation,choose a proccessor to handle this request
     * and output result.
     *
     */
    Method [ <user> public method run ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 161 - 173
    }

    Method [ <user> private method _stop ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 174 - 181
    }

    /**
     * Load class defintion file from $class parameter
     *
     * @param string $class
     */
    Method [ <user> public method loadClass ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 220 - 257

      - Parameters [1] {
        Parameter #0 [ <required> $class ]
      }
    }

    /**
     * Register spl_autoload function
     *
     */
    Method [ <user> private method _registerAutoLoad ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 266 - 273
    }

    /**
	 * 设置公共属性值
	 *
	 * @param string $key
	 * @param mixed $value
	 */
    Method [ <user, inherits Fynd_PublicPropertyClass> public method __set ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\PublicPropertyClass.php 12 - 28

      - Parameters [2] {
        Parameter #0 [ <required> $key ]
        Parameter #1 [ <required> $value ]
      }
    }

    /**
	 * 获取公共属性值
	 *
	 * @param string $key
	 * @return mixed
	 */
    Method [ <user, inherits Fynd_PublicPropertyClass> public method __get ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\PublicPropertyClass.php 35 - 60

      - Parameters [1] {
        Parameter #0 [ <required> $key ]
      }
    }

    /**
	 * 获取类型
	 *
	 * @return ReflectionObject
	 */
    Method [ <user, inherits Fynd_PublicPropertyClass> public method getType ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\PublicPropertyClass.php 66 - 70
    }
  }
}
	Application started
INFO	2008-11-04 15:11:11	/**
 * This is global object of whole application,
 * it dispatch request,hold global variables.
 * it will be only single instance of lifetime.
 *
 */
Object of class [ <user> class Fynd_Application extends Fynd_PublicPropertyClass ] {
  @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 14-274

  - Constants [0] {
  }

  - Static properties [2] {
    Property [ private static $_sessionStarted ]
    Property [ private static $_instance ]
  }

  - Static methods [9] {
    /**
     * single instance factory
     * @return Fynd_Application
     */
    Method [ <user> static public method getInstance ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 71 - 79
    }

    /**
     * Get path of application's controllers.
     *
     * @return string
     */
    Method [ <user> static public method getCtrlPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 85 - 88
    }

    /**
     * Get path of application's models.
     *
     * @return string
     */
    Method [ <user> static public method getModelPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 94 - 97
    }

    /**
     * Get path of application's views.
     *
     * @return string
     */
    Method [ <user> static public method getViewPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 103 - 106
    }

    /**
     * Get path of application's configures.
     *
     * @return string
     */
    Method [ <user> static public method getConfigPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 112 - 115
    }

    Method [ <user> static public method startSession ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 182 - 189
    }

    /**
     * Get the identity which identify whether session was started or not
     *
     * @return bool
     */
    Method [ <user> static public method getIsSessionStarted ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 195 - 198
    }

    /**
     * get a logger, which name is specifid by parameter $name,
     * this method will read LogConfig.xml by default to determine the log file path.
     *
     * @param string $name
     * @return Fynd_Log
     */
    Method [ <user> static public method getLogger ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 206 - 214

      - Parameters [1] {
        Parameter #0 [ <required> $name ]
      }
    }

    Method [ <user> static public method autoload ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 258 - 261

      - Parameters [1] {
        Parameter #0 [ <required> $class ]
      }
    }
  }

  - Properties [6] {
    Property [ <default> protected $_ctrlPath ]
    Property [ <default> protected $_viewPath ]
    Property [ <default> protected $_modelPath ]
    Property [ <default> protected $_configPath ]
    Property [ <default> protected $_workPath ]
    Property [ <default> protected $_log ]
  }

  - Dynamic properties [0] {
  }

  - Methods [10] {
    Method [ <user, ctor> private method __construct ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 116 - 117
    }

    /**
     * Get directory which application work in,end with '/'
     *
     * @return string
     */
    Method [ <user> public method getAppWorkPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 123 - 130
    }

    /**
     * Initialize application's execution environment,
     * read global configures etc.
     *
     */
    Method [ <user> public method init ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 136 - 154
    }

    /**
     * Go go go!
     * read request infomation,choose a proccessor to handle this request
     * and output result.
     *
     */
    Method [ <user> public method run ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 161 - 173
    }

    Method [ <user> private method _stop ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 174 - 181
    }

    /**
     * Load class defintion file from $class parameter
     *
     * @param string $class
     */
    Method [ <user> public method loadClass ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 220 - 257

      - Parameters [1] {
        Parameter #0 [ <required> $class ]
      }
    }

    /**
     * Register spl_autoload function
     *
     */
    Method [ <user> private method _registerAutoLoad ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 266 - 273
    }

    /**
	 * 设置公共属性值
	 *
	 * @param string $key
	 * @param mixed $value
	 */
    Method [ <user, inherits Fynd_PublicPropertyClass> public method __set ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\PublicPropertyClass.php 12 - 28

      - Parameters [2] {
        Parameter #0 [ <required> $key ]
        Parameter #1 [ <required> $value ]
      }
    }

    /**
	 * 获取公共属性值
	 *
	 * @param string $key
	 * @return mixed
	 */
    Method [ <user, inherits Fynd_PublicPropertyClass> public method __get ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\PublicPropertyClass.php 35 - 60

      - Parameters [1] {
        Parameter #0 [ <required> $key ]
      }
    }

    /**
	 * 获取类型
	 *
	 * @return ReflectionObject
	 */
    Method [ <user, inherits Fynd_PublicPropertyClass> public method getType ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\PublicPropertyClass.php 66 - 70
    }
  }
}
	Application started
INFO	2008-11-04 15:11:11	/**
 * This is global object of whole application,
 * it dispatch request,hold global variables.
 * it will be only single instance of lifetime.
 *
 */
Object of class [ <user> class Fynd_Application extends Fynd_PublicPropertyClass ] {
  @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 14-274

  - Constants [0] {
  }

  - Static properties [2] {
    Property [ private static $_sessionStarted ]
    Property [ private static $_instance ]
  }

  - Static methods [9] {
    /**
     * single instance factory
     * @return Fynd_Application
     */
    Method [ <user> static public method getInstance ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 71 - 79
    }

    /**
     * Get path of application's controllers.
     *
     * @return string
     */
    Method [ <user> static public method getCtrlPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 85 - 88
    }

    /**
     * Get path of application's models.
     *
     * @return string
     */
    Method [ <user> static public method getModelPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 94 - 97
    }

    /**
     * Get path of application's views.
     *
     * @return string
     */
    Method [ <user> static public method getViewPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 103 - 106
    }

    /**
     * Get path of application's configures.
     *
     * @return string
     */
    Method [ <user> static public method getConfigPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 112 - 115
    }

    Method [ <user> static public method startSession ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 182 - 189
    }

    /**
     * Get the identity which identify whether session was started or not
     *
     * @return bool
     */
    Method [ <user> static public method getIsSessionStarted ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 195 - 198
    }

    /**
     * get a logger, which name is specifid by parameter $name,
     * this method will read LogConfig.xml by default to determine the log file path.
     *
     * @param string $name
     * @return Fynd_Log
     */
    Method [ <user> static public method getLogger ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 206 - 214

      - Parameters [1] {
        Parameter #0 [ <required> $name ]
      }
    }

    Method [ <user> static public method autoload ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 258 - 261

      - Parameters [1] {
        Parameter #0 [ <required> $class ]
      }
    }
  }

  - Properties [6] {
    Property [ <default> protected $_ctrlPath ]
    Property [ <default> protected $_viewPath ]
    Property [ <default> protected $_modelPath ]
    Property [ <default> protected $_configPath ]
    Property [ <default> protected $_workPath ]
    Property [ <default> protected $_log ]
  }

  - Dynamic properties [0] {
  }

  - Methods [10] {
    Method [ <user, ctor> private method __construct ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 116 - 117
    }

    /**
     * Get directory which application work in,end with '/'
     *
     * @return string
     */
    Method [ <user> public method getAppWorkPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 123 - 130
    }

    /**
     * Initialize application's execution environment,
     * read global configures etc.
     *
     */
    Method [ <user> public method init ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 136 - 154
    }

    /**
     * Go go go!
     * read request infomation,choose a proccessor to handle this request
     * and output result.
     *
     */
    Method [ <user> public method run ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 161 - 173
    }

    Method [ <user> private method _stop ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 174 - 181
    }

    /**
     * Load class defintion file from $class parameter
     *
     * @param string $class
     */
    Method [ <user> public method loadClass ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 220 - 257

      - Parameters [1] {
        Parameter #0 [ <required> $class ]
      }
    }

    /**
     * Register spl_autoload function
     *
     */
    Method [ <user> private method _registerAutoLoad ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 266 - 273
    }

    /**
	 * 设置公共属性值
	 *
	 * @param string $key
	 * @param mixed $value
	 */
    Method [ <user, inherits Fynd_PublicPropertyClass> public method __set ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\PublicPropertyClass.php 12 - 28

      - Parameters [2] {
        Parameter #0 [ <required> $key ]
        Parameter #1 [ <required> $value ]
      }
    }

    /**
	 * 获取公共属性值
	 *
	 * @param string $key
	 * @return mixed
	 */
    Method [ <user, inherits Fynd_PublicPropertyClass> public method __get ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\PublicPropertyClass.php 35 - 60

      - Parameters [1] {
        Parameter #0 [ <required> $key ]
      }
    }

    /**
	 * 获取类型
	 *
	 * @return ReflectionObject
	 */
    Method [ <user, inherits Fynd_PublicPropertyClass> public method getType ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\PublicPropertyClass.php 66 - 70
    }
  }
}
	Application started
INFO	2008-11-04 15:11:11	/**
 * This is global object of whole application,
 * it dispatch request,hold global variables.
 * it will be only single instance of lifetime.
 *
 */
Object of class [ <user> class Fynd_Application extends Fynd_PublicPropertyClass ] {
  @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 14-274

  - Constants [0] {
  }

  - Static properties [2] {
    Property [ private static $_sessionStarted ]
    Property [ private static $_instance ]
  }

  - Static methods [9] {
    /**
     * single instance factory
     * @return Fynd_Application
     */
    Method [ <user> static public method getInstance ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 71 - 79
    }

    /**
     * Get path of application's controllers.
     *
     * @return string
     */
    Method [ <user> static public method getCtrlPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 85 - 88
    }

    /**
     * Get path of application's models.
     *
     * @return string
     */
    Method [ <user> static public method getModelPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 94 - 97
    }

    /**
     * Get path of application's views.
     *
     * @return string
     */
    Method [ <user> static public method getViewPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 103 - 106
    }

    /**
     * Get path of application's configures.
     *
     * @return string
     */
    Method [ <user> static public method getConfigPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 112 - 115
    }

    Method [ <user> static public method startSession ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 182 - 189
    }

    /**
     * Get the identity which identify whether session was started or not
     *
     * @return bool
     */
    Method [ <user> static public method getIsSessionStarted ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 195 - 198
    }

    /**
     * get a logger, which name is specifid by parameter $name,
     * this method will read LogConfig.xml by default to determine the log file path.
     *
     * @param string $name
     * @return Fynd_Log
     */
    Method [ <user> static public method getLogger ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 206 - 214

      - Parameters [1] {
        Parameter #0 [ <required> $name ]
      }
    }

    Method [ <user> static public method autoload ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 258 - 261

      - Parameters [1] {
        Parameter #0 [ <required> $class ]
      }
    }
  }

  - Properties [6] {
    Property [ <default> protected $_ctrlPath ]
    Property [ <default> protected $_viewPath ]
    Property [ <default> protected $_modelPath ]
    Property [ <default> protected $_configPath ]
    Property [ <default> protected $_workPath ]
    Property [ <default> protected $_log ]
  }

  - Dynamic properties [0] {
  }

  - Methods [10] {
    Method [ <user, ctor> private method __construct ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 116 - 117
    }

    /**
     * Get directory which application work in,end with '/'
     *
     * @return string
     */
    Method [ <user> public method getAppWorkPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 123 - 130
    }

    /**
     * Initialize application's execution environment,
     * read global configures etc.
     *
     */
    Method [ <user> public method init ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 136 - 154
    }

    /**
     * Go go go!
     * read request infomation,choose a proccessor to handle this request
     * and output result.
     *
     */
    Method [ <user> public method run ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 161 - 173
    }

    Method [ <user> private method _stop ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 174 - 181
    }

    /**
     * Load class defintion file from $class parameter
     *
     * @param string $class
     */
    Method [ <user> public method loadClass ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 220 - 257

      - Parameters [1] {
        Parameter #0 [ <required> $class ]
      }
    }

    /**
     * Register spl_autoload function
     *
     */
    Method [ <user> private method _registerAutoLoad ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 266 - 273
    }

    /**
	 * 设置公共属性值
	 *
	 * @param string $key
	 * @param mixed $value
	 */
    Method [ <user, inherits Fynd_PublicPropertyClass> public method __set ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\PublicPropertyClass.php 12 - 28

      - Parameters [2] {
        Parameter #0 [ <required> $key ]
        Parameter #1 [ <required> $value ]
      }
    }

    /**
	 * 获取公共属性值
	 *
	 * @param string $key
	 * @return mixed
	 */
    Method [ <user, inherits Fynd_PublicPropertyClass> public method __get ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\PublicPropertyClass.php 35 - 60

      - Parameters [1] {
        Parameter #0 [ <required> $key ]
      }
    }

    /**
	 * 获取类型
	 *
	 * @return ReflectionObject
	 */
    Method [ <user, inherits Fynd_PublicPropertyClass> public method getType ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\PublicPropertyClass.php 66 - 70
    }
  }
}
	Application started
INFO	2008-11-04 15:11:11	/**
 * This is global object of whole application,
 * it dispatch request,hold global variables.
 * it will be only single instance of lifetime.
 *
 */
Object of class [ <user> class Fynd_Application extends Fynd_PublicPropertyClass ] {
  @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 14-274

  - Constants [0] {
  }

  - Static properties [2] {
    Property [ private static $_sessionStarted ]
    Property [ private static $_instance ]
  }

  - Static methods [9] {
    /**
     * single instance factory
     * @return Fynd_Application
     */
    Method [ <user> static public method getInstance ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 71 - 79
    }

    /**
     * Get path of application's controllers.
     *
     * @return string
     */
    Method [ <user> static public method getCtrlPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 85 - 88
    }

    /**
     * Get path of application's models.
     *
     * @return string
     */
    Method [ <user> static public method getModelPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 94 - 97
    }

    /**
     * Get path of application's views.
     *
     * @return string
     */
    Method [ <user> static public method getViewPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 103 - 106
    }

    /**
     * Get path of application's configures.
     *
     * @return string
     */
    Method [ <user> static public method getConfigPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 112 - 115
    }

    Method [ <user> static public method startSession ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 182 - 189
    }

    /**
     * Get the identity which identify whether session was started or not
     *
     * @return bool
     */
    Method [ <user> static public method getIsSessionStarted ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 195 - 198
    }

    /**
     * get a logger, which name is specifid by parameter $name,
     * this method will read LogConfig.xml by default to determine the log file path.
     *
     * @param string $name
     * @return Fynd_Log
     */
    Method [ <user> static public method getLogger ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 206 - 214

      - Parameters [1] {
        Parameter #0 [ <required> $name ]
      }
    }

    Method [ <user> static public method autoload ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 258 - 261

      - Parameters [1] {
        Parameter #0 [ <required> $class ]
      }
    }
  }

  - Properties [6] {
    Property [ <default> protected $_ctrlPath ]
    Property [ <default> protected $_viewPath ]
    Property [ <default> protected $_modelPath ]
    Property [ <default> protected $_configPath ]
    Property [ <default> protected $_workPath ]
    Property [ <default> protected $_log ]
  }

  - Dynamic properties [0] {
  }

  - Methods [10] {
    Method [ <user, ctor> private method __construct ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 116 - 117
    }

    /**
     * Get directory which application work in,end with '/'
     *
     * @return string
     */
    Method [ <user> public method getAppWorkPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 123 - 130
    }

    /**
     * Initialize application's execution environment,
     * read global configures etc.
     *
     */
    Method [ <user> public method init ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 136 - 154
    }

    /**
     * Go go go!
     * read request infomation,choose a proccessor to handle this request
     * and output result.
     *
     */
    Method [ <user> public method run ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 161 - 173
    }

    Method [ <user> private method _stop ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 174 - 181
    }

    /**
     * Load class defintion file from $class parameter
     *
     * @param string $class
     */
    Method [ <user> public method loadClass ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 220 - 257

      - Parameters [1] {
        Parameter #0 [ <required> $class ]
      }
    }

    /**
     * Register spl_autoload function
     *
     */
    Method [ <user> private method _registerAutoLoad ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 266 - 273
    }

    /**
	 * 设置公共属性值
	 *
	 * @param string $key
	 * @param mixed $value
	 */
    Method [ <user, inherits Fynd_PublicPropertyClass> public method __set ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\PublicPropertyClass.php 12 - 28

      - Parameters [2] {
        Parameter #0 [ <required> $key ]
        Parameter #1 [ <required> $value ]
      }
    }

    /**
	 * 获取公共属性值
	 *
	 * @param string $key
	 * @return mixed
	 */
    Method [ <user, inherits Fynd_PublicPropertyClass> public method __get ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\PublicPropertyClass.php 35 - 60

      - Parameters [1] {
        Parameter #0 [ <required> $key ]
      }
    }

    /**
	 * 获取类型
	 *
	 * @return ReflectionObject
	 */
    Method [ <user, inherits Fynd_PublicPropertyClass> public method getType ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\PublicPropertyClass.php 66 - 70
    }
  }
}
	Application started
INFO	2008-11-04 15:11:11	/**
 * This is global object of whole application,
 * it dispatch request,hold global variables.
 * it will be only single instance of lifetime.
 *
 */
Object of class [ <user> class Fynd_Application extends Fynd_PublicPropertyClass ] {
  @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 14-274

  - Constants [0] {
  }

  - Static properties [2] {
    Property [ private static $_sessionStarted ]
    Property [ private static $_instance ]
  }

  - Static methods [9] {
    /**
     * single instance factory
     * @return Fynd_Application
     */
    Method [ <user> static public method getInstance ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 71 - 79
    }

    /**
     * Get path of application's controllers.
     *
     * @return string
     */
    Method [ <user> static public method getCtrlPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 85 - 88
    }

    /**
     * Get path of application's models.
     *
     * @return string
     */
    Method [ <user> static public method getModelPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 94 - 97
    }

    /**
     * Get path of application's views.
     *
     * @return string
     */
    Method [ <user> static public method getViewPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 103 - 106
    }

    /**
     * Get path of application's configures.
     *
     * @return string
     */
    Method [ <user> static public method getConfigPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 112 - 115
    }

    Method [ <user> static public method startSession ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 182 - 189
    }

    /**
     * Get the identity which identify whether session was started or not
     *
     * @return bool
     */
    Method [ <user> static public method getIsSessionStarted ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 195 - 198
    }

    /**
     * get a logger, which name is specifid by parameter $name,
     * this method will read LogConfig.xml by default to determine the log file path.
     *
     * @param string $name
     * @return Fynd_Log
     */
    Method [ <user> static public method getLogger ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 206 - 214

      - Parameters [1] {
        Parameter #0 [ <required> $name ]
      }
    }

    Method [ <user> static public method autoload ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 258 - 261

      - Parameters [1] {
        Parameter #0 [ <required> $class ]
      }
    }
  }

  - Properties [6] {
    Property [ <default> protected $_ctrlPath ]
    Property [ <default> protected $_viewPath ]
    Property [ <default> protected $_modelPath ]
    Property [ <default> protected $_configPath ]
    Property [ <default> protected $_workPath ]
    Property [ <default> protected $_log ]
  }

  - Dynamic properties [0] {
  }

  - Methods [10] {
    Method [ <user, ctor> private method __construct ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 116 - 117
    }

    /**
     * Get directory which application work in,end with '/'
     *
     * @return string
     */
    Method [ <user> public method getAppWorkPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 123 - 130
    }

    /**
     * Initialize application's execution environment,
     * read global configures etc.
     *
     */
    Method [ <user> public method init ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 136 - 154
    }

    /**
     * Go go go!
     * read request infomation,choose a proccessor to handle this request
     * and output result.
     *
     */
    Method [ <user> public method run ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 161 - 173
    }

    Method [ <user> private method _stop ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 174 - 181
    }

    /**
     * Load class defintion file from $class parameter
     *
     * @param string $class
     */
    Method [ <user> public method loadClass ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 220 - 257

      - Parameters [1] {
        Parameter #0 [ <required> $class ]
      }
    }

    /**
     * Register spl_autoload function
     *
     */
    Method [ <user> private method _registerAutoLoad ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 266 - 273
    }

    /**
	 * 设置公共属性值
	 *
	 * @param string $key
	 * @param mixed $value
	 */
    Method [ <user, inherits Fynd_PublicPropertyClass> public method __set ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\PublicPropertyClass.php 12 - 28

      - Parameters [2] {
        Parameter #0 [ <required> $key ]
        Parameter #1 [ <required> $value ]
      }
    }

    /**
	 * 获取公共属性值
	 *
	 * @param string $key
	 * @return mixed
	 */
    Method [ <user, inherits Fynd_PublicPropertyClass> public method __get ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\PublicPropertyClass.php 35 - 60

      - Parameters [1] {
        Parameter #0 [ <required> $key ]
      }
    }

    /**
	 * 获取类型
	 *
	 * @return ReflectionObject
	 */
    Method [ <user, inherits Fynd_PublicPropertyClass> public method getType ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\PublicPropertyClass.php 66 - 70
    }
  }
}
	Application started
INFO	2008-11-04 15:11:11	/**
 * This is global object of whole application,
 * it dispatch request,hold global variables.
 * it will be only single instance of lifetime.
 *
 */
Object of class [ <user> class Fynd_Application extends Fynd_PublicPropertyClass ] {
  @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 14-274

  - Constants [0] {
  }

  - Static properties [2] {
    Property [ private static $_sessionStarted ]
    Property [ private static $_instance ]
  }

  - Static methods [9] {
    /**
     * single instance factory
     * @return Fynd_Application
     */
    Method [ <user> static public method getInstance ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 71 - 79
    }

    /**
     * Get path of application's controllers.
     *
     * @return string
     */
    Method [ <user> static public method getCtrlPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 85 - 88
    }

    /**
     * Get path of application's models.
     *
     * @return string
     */
    Method [ <user> static public method getModelPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 94 - 97
    }

    /**
     * Get path of application's views.
     *
     * @return string
     */
    Method [ <user> static public method getViewPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 103 - 106
    }

    /**
     * Get path of application's configures.
     *
     * @return string
     */
    Method [ <user> static public method getConfigPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 112 - 115
    }

    Method [ <user> static public method startSession ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 182 - 189
    }

    /**
     * Get the identity which identify whether session was started or not
     *
     * @return bool
     */
    Method [ <user> static public method getIsSessionStarted ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 195 - 198
    }

    /**
     * get a logger, which name is specifid by parameter $name,
     * this method will read LogConfig.xml by default to determine the log file path.
     *
     * @param string $name
     * @return Fynd_Log
     */
    Method [ <user> static public method getLogger ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 206 - 214

      - Parameters [1] {
        Parameter #0 [ <required> $name ]
      }
    }

    Method [ <user> static public method autoload ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 258 - 261

      - Parameters [1] {
        Parameter #0 [ <required> $class ]
      }
    }
  }

  - Properties [6] {
    Property [ <default> protected $_ctrlPath ]
    Property [ <default> protected $_viewPath ]
    Property [ <default> protected $_modelPath ]
    Property [ <default> protected $_configPath ]
    Property [ <default> protected $_workPath ]
    Property [ <default> protected $_log ]
  }

  - Dynamic properties [0] {
  }

  - Methods [10] {
    Method [ <user, ctor> private method __construct ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 116 - 117
    }

    /**
     * Get directory which application work in,end with '/'
     *
     * @return string
     */
    Method [ <user> public method getAppWorkPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 123 - 130
    }

    /**
     * Initialize application's execution environment,
     * read global configures etc.
     *
     */
    Method [ <user> public method init ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 136 - 154
    }

    /**
     * Go go go!
     * read request infomation,choose a proccessor to handle this request
     * and output result.
     *
     */
    Method [ <user> public method run ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 161 - 173
    }

    Method [ <user> private method _stop ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 174 - 181
    }

    /**
     * Load class defintion file from $class parameter
     *
     * @param string $class
     */
    Method [ <user> public method loadClass ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 220 - 257

      - Parameters [1] {
        Parameter #0 [ <required> $class ]
      }
    }

    /**
     * Register spl_autoload function
     *
     */
    Method [ <user> private method _registerAutoLoad ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 266 - 273
    }

    /**
	 * 设置公共属性值
	 *
	 * @param string $key
	 * @param mixed $value
	 */
    Method [ <user, inherits Fynd_PublicPropertyClass> public method __set ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\PublicPropertyClass.php 12 - 28

      - Parameters [2] {
        Parameter #0 [ <required> $key ]
        Parameter #1 [ <required> $value ]
      }
    }

    /**
	 * 获取公共属性值
	 *
	 * @param string $key
	 * @return mixed
	 */
    Method [ <user, inherits Fynd_PublicPropertyClass> public method __get ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\PublicPropertyClass.php 35 - 60

      - Parameters [1] {
        Parameter #0 [ <required> $key ]
      }
    }

    /**
	 * 获取类型
	 *
	 * @return ReflectionObject
	 */
    Method [ <user, inherits Fynd_PublicPropertyClass> public method getType ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\PublicPropertyClass.php 66 - 70
    }
  }
}
	Application started
INFO	2008-11-04 15:11:11	/**
 * This is global object of whole application,
 * it dispatch request,hold global variables.
 * it will be only single instance of lifetime.
 *
 */
Object of class [ <user> class Fynd_Application extends Fynd_PublicPropertyClass ] {
  @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 14-274

  - Constants [0] {
  }

  - Static properties [2] {
    Property [ private static $_sessionStarted ]
    Property [ private static $_instance ]
  }

  - Static methods [9] {
    /**
     * single instance factory
     * @return Fynd_Application
     */
    Method [ <user> static public method getInstance ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 71 - 79
    }

    /**
     * Get path of application's controllers.
     *
     * @return string
     */
    Method [ <user> static public method getCtrlPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 85 - 88
    }

    /**
     * Get path of application's models.
     *
     * @return string
     */
    Method [ <user> static public method getModelPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 94 - 97
    }

    /**
     * Get path of application's views.
     *
     * @return string
     */
    Method [ <user> static public method getViewPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 103 - 106
    }

    /**
     * Get path of application's configures.
     *
     * @return string
     */
    Method [ <user> static public method getConfigPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 112 - 115
    }

    Method [ <user> static public method startSession ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 182 - 189
    }

    /**
     * Get the identity which identify whether session was started or not
     *
     * @return bool
     */
    Method [ <user> static public method getIsSessionStarted ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 195 - 198
    }

    /**
     * get a logger, which name is specifid by parameter $name,
     * this method will read LogConfig.xml by default to determine the log file path.
     *
     * @param string $name
     * @return Fynd_Log
     */
    Method [ <user> static public method getLogger ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 206 - 214

      - Parameters [1] {
        Parameter #0 [ <required> $name ]
      }
    }

    Method [ <user> static public method autoload ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 258 - 261

      - Parameters [1] {
        Parameter #0 [ <required> $class ]
      }
    }
  }

  - Properties [6] {
    Property [ <default> protected $_ctrlPath ]
    Property [ <default> protected $_viewPath ]
    Property [ <default> protected $_modelPath ]
    Property [ <default> protected $_configPath ]
    Property [ <default> protected $_workPath ]
    Property [ <default> protected $_log ]
  }

  - Dynamic properties [0] {
  }

  - Methods [10] {
    Method [ <user, ctor> private method __construct ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 116 - 117
    }

    /**
     * Get directory which application work in,end with '/'
     *
     * @return string
     */
    Method [ <user> public method getAppWorkPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 123 - 130
    }

    /**
     * Initialize application's execution environment,
     * read global configures etc.
     *
     */
    Method [ <user> public method init ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 136 - 154
    }

    /**
     * Go go go!
     * read request infomation,choose a proccessor to handle this request
     * and output result.
     *
     */
    Method [ <user> public method run ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 161 - 173
    }

    Method [ <user> private method _stop ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 174 - 181
    }

    /**
     * Load class defintion file from $class parameter
     *
     * @param string $class
     */
    Method [ <user> public method loadClass ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 220 - 257

      - Parameters [1] {
        Parameter #0 [ <required> $class ]
      }
    }

    /**
     * Register spl_autoload function
     *
     */
    Method [ <user> private method _registerAutoLoad ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 266 - 273
    }

    /**
	 * 设置公共属性值
	 *
	 * @param string $key
	 * @param mixed $value
	 */
    Method [ <user, inherits Fynd_PublicPropertyClass> public method __set ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\PublicPropertyClass.php 12 - 28

      - Parameters [2] {
        Parameter #0 [ <required> $key ]
        Parameter #1 [ <required> $value ]
      }
    }

    /**
	 * 获取公共属性值
	 *
	 * @param string $key
	 * @return mixed
	 */
    Method [ <user, inherits Fynd_PublicPropertyClass> public method __get ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\PublicPropertyClass.php 35 - 60

      - Parameters [1] {
        Parameter #0 [ <required> $key ]
      }
    }

    /**
	 * 获取类型
	 *
	 * @return ReflectionObject
	 */
    Method [ <user, inherits Fynd_PublicPropertyClass> public method getType ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\PublicPropertyClass.php 66 - 70
    }
  }
}
	Application started
INFO	2008-11-04 15:11:11	/**
 * This is global object of whole application,
 * it dispatch request,hold global variables.
 * it will be only single instance of lifetime.
 *
 */
Object of class [ <user> class Fynd_Application extends Fynd_PublicPropertyClass ] {
  @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 14-274

  - Constants [0] {
  }

  - Static properties [2] {
    Property [ private static $_sessionStarted ]
    Property [ private static $_instance ]
  }

  - Static methods [9] {
    /**
     * single instance factory
     * @return Fynd_Application
     */
    Method [ <user> static public method getInstance ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 71 - 79
    }

    /**
     * Get path of application's controllers.
     *
     * @return string
     */
    Method [ <user> static public method getCtrlPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 85 - 88
    }

    /**
     * Get path of application's models.
     *
     * @return string
     */
    Method [ <user> static public method getModelPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 94 - 97
    }

    /**
     * Get path of application's views.
     *
     * @return string
     */
    Method [ <user> static public method getViewPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 103 - 106
    }

    /**
     * Get path of application's configures.
     *
     * @return string
     */
    Method [ <user> static public method getConfigPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 112 - 115
    }

    Method [ <user> static public method startSession ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 182 - 189
    }

    /**
     * Get the identity which identify whether session was started or not
     *
     * @return bool
     */
    Method [ <user> static public method getIsSessionStarted ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 195 - 198
    }

    /**
     * get a logger, which name is specifid by parameter $name,
     * this method will read LogConfig.xml by default to determine the log file path.
     *
     * @param string $name
     * @return Fynd_Log
     */
    Method [ <user> static public method getLogger ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 206 - 214

      - Parameters [1] {
        Parameter #0 [ <required> $name ]
      }
    }

    Method [ <user> static public method autoload ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 258 - 261

      - Parameters [1] {
        Parameter #0 [ <required> $class ]
      }
    }
  }

  - Properties [6] {
    Property [ <default> protected $_ctrlPath ]
    Property [ <default> protected $_viewPath ]
    Property [ <default> protected $_modelPath ]
    Property [ <default> protected $_configPath ]
    Property [ <default> protected $_workPath ]
    Property [ <default> protected $_log ]
  }

  - Dynamic properties [0] {
  }

  - Methods [10] {
    Method [ <user, ctor> private method __construct ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 116 - 117
    }

    /**
     * Get directory which application work in,end with '/'
     *
     * @return string
     */
    Method [ <user> public method getAppWorkPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 123 - 130
    }

    /**
     * Initialize application's execution environment,
     * read global configures etc.
     *
     */
    Method [ <user> public method init ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 136 - 154
    }

    /**
     * Go go go!
     * read request infomation,choose a proccessor to handle this request
     * and output result.
     *
     */
    Method [ <user> public method run ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 161 - 173
    }

    Method [ <user> private method _stop ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 174 - 181
    }

    /**
     * Load class defintion file from $class parameter
     *
     * @param string $class
     */
    Method [ <user> public method loadClass ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 220 - 257

      - Parameters [1] {
        Parameter #0 [ <required> $class ]
      }
    }

    /**
     * Register spl_autoload function
     *
     */
    Method [ <user> private method _registerAutoLoad ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 266 - 273
    }

    /**
	 * 设置公共属性值
	 *
	 * @param string $key
	 * @param mixed $value
	 */
    Method [ <user, inherits Fynd_PublicPropertyClass> public method __set ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\PublicPropertyClass.php 12 - 28

      - Parameters [2] {
        Parameter #0 [ <required> $key ]
        Parameter #1 [ <required> $value ]
      }
    }

    /**
	 * 获取公共属性值
	 *
	 * @param string $key
	 * @return mixed
	 */
    Method [ <user, inherits Fynd_PublicPropertyClass> public method __get ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\PublicPropertyClass.php 35 - 60

      - Parameters [1] {
        Parameter #0 [ <required> $key ]
      }
    }

    /**
	 * 获取类型
	 *
	 * @return ReflectionObject
	 */
    Method [ <user, inherits Fynd_PublicPropertyClass> public method getType ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\PublicPropertyClass.php 66 - 70
    }
  }
}
	Script end!!!
INFO	2008-11-04 15:11:11	/**
 * This is global object of whole application,
 * it dispatch request,hold global variables.
 * it will be only single instance of lifetime.
 *
 */
Object of class [ <user> class Fynd_Application extends Fynd_PublicPropertyClass ] {
  @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 14-274

  - Constants [0] {
  }

  - Static properties [2] {
    Property [ private static $_sessionStarted ]
    Property [ private static $_instance ]
  }

  - Static methods [9] {
    /**
     * single instance factory
     * @return Fynd_Application
     */
    Method [ <user> static public method getInstance ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 71 - 79
    }

    /**
     * Get path of application's controllers.
     *
     * @return string
     */
    Method [ <user> static public method getCtrlPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 85 - 88
    }

    /**
     * Get path of application's models.
     *
     * @return string
     */
    Method [ <user> static public method getModelPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 94 - 97
    }

    /**
     * Get path of application's views.
     *
     * @return string
     */
    Method [ <user> static public method getViewPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 103 - 106
    }

    /**
     * Get path of application's configures.
     *
     * @return string
     */
    Method [ <user> static public method getConfigPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 112 - 115
    }

    Method [ <user> static public method startSession ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 182 - 189
    }

    /**
     * Get the identity which identify whether session was started or not
     *
     * @return bool
     */
    Method [ <user> static public method getIsSessionStarted ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 195 - 198
    }

    /**
     * get a logger, which name is specifid by parameter $name,
     * this method will read LogConfig.xml by default to determine the log file path.
     *
     * @param string $name
     * @return Fynd_Log
     */
    Method [ <user> static public method getLogger ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 206 - 214

      - Parameters [1] {
        Parameter #0 [ <required> $name ]
      }
    }

    Method [ <user> static public method autoload ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 258 - 261

      - Parameters [1] {
        Parameter #0 [ <required> $class ]
      }
    }
  }

  - Properties [6] {
    Property [ <default> protected $_ctrlPath ]
    Property [ <default> protected $_viewPath ]
    Property [ <default> protected $_modelPath ]
    Property [ <default> protected $_configPath ]
    Property [ <default> protected $_workPath ]
    Property [ <default> protected $_log ]
  }

  - Dynamic properties [0] {
  }

  - Methods [10] {
    Method [ <user, ctor> private method __construct ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 116 - 117
    }

    /**
     * Get directory which application work in,end with '/'
     *
     * @return string
     */
    Method [ <user> public method getAppWorkPath ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 123 - 130
    }

    /**
     * Initialize application's execution environment,
     * read global configures etc.
     *
     */
    Method [ <user> public method init ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 136 - 154
    }

    /**
     * Go go go!
     * read request infomation,choose a proccessor to handle this request
     * and output result.
     *
     */
    Method [ <user> public method run ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 161 - 173
    }

    Method [ <user> private method _stop ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 174 - 181
    }

    /**
     * Load class defintion file from $class parameter
     *
     * @param string $class
     */
    Method [ <user> public method loadClass ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 220 - 257

      - Parameters [1] {
        Parameter #0 [ <required> $class ]
      }
    }

    /**
     * Register spl_autoload function
     *
     */
    Method [ <user> private method _registerAutoLoad ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\Application.php 266 - 273
    }

    /**
	 * 设置公共属性值
	 *
	 * @param string $key
	 * @param mixed $value
	 */
    Method [ <user, inherits Fynd_PublicPropertyClass> public method __set ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\PublicPropertyClass.php 12 - 28

      - Parameters [2] {
        Parameter #0 [ <required> $key ]
        Parameter #1 [ <required> $value ]
      }
    }

    /**
	 * 获取公共属性值
	 *
	 * @param string $key
	 * @return mixed
	 */
    Method [ <user, inherits Fynd_PublicPropertyClass> public method __get ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\PublicPropertyClass.php 35 - 60

      - Parameters [1] {
        Parameter #0 [ <required> $key ]
      }
    }

    /**
	 * 获取类型
	 *
	 * @return ReflectionObject
	 */
    Method [ <user, inherits Fynd_PublicPropertyClass> public method getType ] {
      @@ E:\WorkSpace\Fynd\src\Fynd\PublicPropertyClass.php 66 - 70
    }
  }
}
	Application started
